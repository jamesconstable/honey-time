// Generated by purs bundle 0.13.8
var PS = {};
(function(exports) {
  "use strict";

  exports.arrayApply = function (fs) {
    return function (xs) {
      var l = fs.length;
      var k = xs.length;
      var result = new Array(l*k);
      var n = 0;
      for (var i = 0; i < l; i++) {
        var f = fs[i];
        for (var j = 0; j < k; j++) {
          result[n++] = f(xs[j]);
        }
      }
      return result;
    };
  };
})(PS["Control.Apply"] = PS["Control.Apply"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Semigroupoid"] = $PS["Control.Semigroupoid"] || {};
  var exports = $PS["Control.Semigroupoid"];
  var Semigroupoid = function (compose) {
      this.compose = compose;
  };
  var semigroupoidFn = new Semigroupoid(function (f) {
      return function (g) {
          return function (x) {
              return f(g(x));
          };
      };
  });
  exports["semigroupoidFn"] = semigroupoidFn;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Category"] = $PS["Control.Category"] || {};
  var exports = $PS["Control.Category"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];                
  var Category = function (Semigroupoid0, identity) {
      this.Semigroupoid0 = Semigroupoid0;
      this.identity = identity;
  };
  var identity = function (dict) {
      return dict.identity;
  };
  var categoryFn = new Category(function () {
      return Control_Semigroupoid.semigroupoidFn;
  }, function (x) {
      return x;
  });
  exports["identity"] = identity;
  exports["categoryFn"] = categoryFn;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Function"] = $PS["Data.Function"] || {};
  var exports = $PS["Data.Function"];
  var flip = function (f) {
      return function (b) {
          return function (a) {
              return f(a)(b);
          };
      };
  };
  var $$const = function (a) {
      return function (v) {
          return a;
      };
  };
  exports["flip"] = flip;
  exports["const"] = $$const;
})(PS);
(function(exports) {
  "use strict";

  exports.arrayMap = function (f) {
    return function (arr) {
      var l = arr.length;
      var result = new Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(arr[i]);
      }
      return result;
    };
  };
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function(exports) {
  "use strict";

  exports.unit = {};
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Unit"] = $PS["Data.Unit"] || {};
  var exports = $PS["Data.Unit"];
  var $foreign = $PS["Data.Unit"];
  exports["unit"] = $foreign.unit;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Functor"] = $PS["Data.Functor"] || {};
  var exports = $PS["Data.Functor"];
  var $foreign = $PS["Data.Functor"];
  var Data_Function = $PS["Data.Function"];
  var Data_Unit = $PS["Data.Unit"];                
  var Functor = function (map) {
      this.map = map;
  };
  var map = function (dict) {
      return dict.map;
  };
  var $$void = function (dictFunctor) {
      return map(dictFunctor)(Data_Function["const"](Data_Unit.unit));
  };                                                                                             
  var functorArray = new Functor($foreign.arrayMap);
  var flap = function (dictFunctor) {
      return function (ff) {
          return function (x) {
              return map(dictFunctor)(function (f) {
                  return f(x);
              })(ff);
          };
      };
  };
  exports["Functor"] = Functor;
  exports["map"] = map;
  exports["void"] = $$void;
  exports["flap"] = flap;
  exports["functorArray"] = functorArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Apply"] = $PS["Control.Apply"] || {};
  var exports = $PS["Control.Apply"];
  var $foreign = $PS["Control.Apply"];
  var Control_Category = $PS["Control.Category"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];                
  var Apply = function (Functor0, apply) {
      this.Functor0 = Functor0;
      this.apply = apply;
  }; 
  var applyArray = new Apply(function () {
      return Data_Functor.functorArray;
  }, $foreign.arrayApply);
  var apply = function (dict) {
      return dict.apply;
  };
  var applySecond = function (dictApply) {
      return function (a) {
          return function (b) {
              return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function["const"](Control_Category.identity(Control_Category.categoryFn)))(a))(b);
          };
      };
  };
  var lift2 = function (dictApply) {
      return function (f) {
          return function (a) {
              return function (b) {
                  return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b);
              };
          };
      };
  };
  exports["Apply"] = Apply;
  exports["apply"] = apply;
  exports["applySecond"] = applySecond;
  exports["lift2"] = lift2;
  exports["applyArray"] = applyArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Applicative"] = $PS["Control.Applicative"] || {};
  var exports = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];        
  var Applicative = function (Apply0, pure) {
      this.Apply0 = Apply0;
      this.pure = pure;
  };
  var pure = function (dict) {
      return dict.pure;
  };
  var liftA1 = function (dictApplicative) {
      return function (f) {
          return function (a) {
              return Control_Apply.apply(dictApplicative.Apply0())(pure(dictApplicative)(f))(a);
          };
      };
  };
  exports["Applicative"] = Applicative;
  exports["pure"] = pure;
  exports["liftA1"] = liftA1;
})(PS);
(function(exports) {
  "use strict";

  exports.arrayBind = function (arr) {
    return function (f) {
      var result = [];
      for (var i = 0, l = arr.length; i < l; i++) {
        Array.prototype.push.apply(result, f(arr[i]));
      }
      return result;
    };
  };
})(PS["Control.Bind"] = PS["Control.Bind"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Bind"] = $PS["Control.Bind"] || {};
  var exports = $PS["Control.Bind"];
  var $foreign = $PS["Control.Bind"];
  var Control_Apply = $PS["Control.Apply"];                
  var Discard = function (discard) {
      this.discard = discard;
  };
  var Bind = function (Apply0, bind) {
      this.Apply0 = Apply0;
      this.bind = bind;
  };
  var discard = function (dict) {
      return dict.discard;
  }; 
  var bindArray = new Bind(function () {
      return Control_Apply.applyArray;
  }, $foreign.arrayBind);
  var bind = function (dict) {
      return dict.bind;
  };
  var discardUnit = new Discard(function (dictBind) {
      return bind(dictBind);
  });
  exports["Bind"] = Bind;
  exports["bind"] = bind;
  exports["discard"] = discard;
  exports["bindArray"] = bindArray;
  exports["discardUnit"] = discardUnit;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Monad"] = $PS["Control.Monad"] || {};
  var exports = $PS["Control.Monad"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];                
  var Monad = function (Applicative0, Bind1) {
      this.Applicative0 = Applicative0;
      this.Bind1 = Bind1;
  }; 
  var liftM1 = function (dictMonad) {
      return function (f) {
          return function (a) {
              return Control_Bind.bind(dictMonad.Bind1())(a)(function (a$prime) {
                  return Control_Applicative.pure(dictMonad.Applicative0())(f(a$prime));
              });
          };
      };
  };
  var ap = function (dictMonad) {
      return function (f) {
          return function (a) {
              return Control_Bind.bind(dictMonad.Bind1())(f)(function (f$prime) {
                  return Control_Bind.bind(dictMonad.Bind1())(a)(function (a$prime) {
                      return Control_Applicative.pure(dictMonad.Applicative0())(f$prime(a$prime));
                  });
              });
          };
      };
  };
  exports["Monad"] = Monad;
  exports["liftM1"] = liftM1;
  exports["ap"] = ap;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Monad.Trans.Class"] = $PS["Control.Monad.Trans.Class"] || {};
  var exports = $PS["Control.Monad.Trans.Class"];
  var MonadTrans = function (lift) {
      this.lift = lift;
  };
  var lift = function (dict) {
      return dict.lift;
  };
  exports["lift"] = lift;
  exports["MonadTrans"] = MonadTrans;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Maybe"] = $PS["Data.Maybe"] || {};
  var exports = $PS["Data.Maybe"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];          
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  var maybe = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Nothing) {
                  return v;
              };
              if (v2 instanceof Just) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Maybe (line 217, column 1 - line 217, column 51): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var isNothing = maybe(true)(Data_Function["const"](false));
  var functorMaybe = new Data_Functor.Functor(function (v) {
      return function (v1) {
          if (v1 instanceof Just) {
              return new Just(v(v1.value0));
          };
          return Nothing.value;
      };
  });
  var fromMaybe = function (a) {
      return maybe(a)(Control_Category.identity(Control_Category.categoryFn));
  };
  var fromJust = function (dictPartial) {
      return function (v) {
          if (v instanceof Just) {
              return v.value0;
          };
          throw new Error("Failed pattern match at Data.Maybe (line 268, column 1 - line 268, column 46): " + [ v.constructor.name ]);
      };
  };
  var applyMaybe = new Control_Apply.Apply(function () {
      return functorMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Just) {
              return Data_Functor.map(functorMaybe)(v.value0)(v1);
          };
          if (v instanceof Nothing) {
              return Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Maybe (line 67, column 1 - line 69, column 30): " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var bindMaybe = new Control_Bind.Bind(function () {
      return applyMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Just) {
              return v1(v.value0);
          };
          if (v instanceof Nothing) {
              return Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Maybe (line 125, column 1 - line 127, column 28): " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;
  exports["maybe"] = maybe;
  exports["fromMaybe"] = fromMaybe;
  exports["isNothing"] = isNothing;
  exports["fromJust"] = fromJust;
  exports["functorMaybe"] = functorMaybe;
  exports["bindMaybe"] = bindMaybe;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Newtype"] = $PS["Data.Newtype"] || {};
  var exports = $PS["Data.Newtype"];                                   
  var Newtype = function (unwrap, wrap) {
      this.unwrap = unwrap;
      this.wrap = wrap;
  };
  var wrap = function (dict) {
      return dict.wrap;
  };
  exports["wrap"] = wrap;
  exports["Newtype"] = Newtype;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Monad.Maybe.Trans"] = $PS["Control.Monad.Maybe.Trans"] || {};
  var exports = $PS["Control.Monad.Maybe.Trans"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Control_Monad_Trans_Class = $PS["Control.Monad.Trans.Class"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];                
  var MaybeT = function (x) {
      return x;
  };
  var runMaybeT = function (v) {
      return v;
  };
  var newtypeMaybeT = new Data_Newtype.Newtype(function (n) {
      return n;
  }, MaybeT);
  var monadTransMaybeT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
      var $71 = Control_Monad.liftM1(dictMonad)(Data_Maybe.Just.create);
      return function ($72) {
          return MaybeT($71($72));
      };
  });
  var functorMaybeT = function (dictFunctor) {
      return new Data_Functor.Functor(function (f) {
          return function (v) {
              return Data_Functor.map(dictFunctor)(Data_Functor.map(Data_Maybe.functorMaybe)(f))(v);
          };
      });
  };
  var monadMaybeT = function (dictMonad) {
      return new Control_Monad.Monad(function () {
          return applicativeMaybeT(dictMonad);
      }, function () {
          return bindMaybeT(dictMonad);
      });
  };
  var bindMaybeT = function (dictMonad) {
      return new Control_Bind.Bind(function () {
          return applyMaybeT(dictMonad);
      }, function (v) {
          return function (f) {
              return Control_Bind.bind(dictMonad.Bind1())(v)(function (v1) {
                  if (v1 instanceof Data_Maybe.Nothing) {
                      return Control_Applicative.pure(dictMonad.Applicative0())(Data_Maybe.Nothing.value);
                  };
                  if (v1 instanceof Data_Maybe.Just) {
                      var v2 = f(v1.value0);
                      return v2;
                  };
                  throw new Error("Failed pattern match at Control.Monad.Maybe.Trans (line 54, column 11 - line 56, column 42): " + [ v1.constructor.name ]);
              });
          };
      });
  };
  var applyMaybeT = function (dictMonad) {
      return new Control_Apply.Apply(function () {
          return functorMaybeT(((dictMonad.Bind1()).Apply0()).Functor0());
      }, Control_Monad.ap(monadMaybeT(dictMonad)));
  };
  var applicativeMaybeT = function (dictMonad) {
      return new Control_Applicative.Applicative(function () {
          return applyMaybeT(dictMonad);
      }, (function () {
          var $73 = Control_Applicative.pure(dictMonad.Applicative0());
          return function ($74) {
              return MaybeT($73(Data_Maybe.Just.create($74)));
          };
      })());
  };
  exports["runMaybeT"] = runMaybeT;
  exports["newtypeMaybeT"] = newtypeMaybeT;
  exports["bindMaybeT"] = bindMaybeT;
  exports["monadTransMaybeT"] = monadTransMaybeT;
})(PS);
(function(exports) {
  "use strict";

  exports.map_ = function (f) {
    return function (a) {
      return function () {
        return f(a());
      };
    };
  };

  exports.pure_ = function (a) {
    return function () {
      return a;
    };
  };

  exports.bind_ = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };

  exports.new = function (val) {
    return function () {
      return { value: val };
    };
  };

  exports.read = function (ref) {
    return function () {
      return ref.value;
    };
  };

  exports["modify'"] = function (f) {
    return function (ref) {
      return function () {
        var t = f(ref.value);
        ref.value = t.state;
        return t.value;
      };
    };
  };

  exports.write = function (a) {
    return function (ref) {
      return function () {
        return ref.value = a; // eslint-disable-line no-return-assign
      };
    };
  };
})(PS["Control.Monad.ST.Internal"] = PS["Control.Monad.ST.Internal"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Monad.ST.Internal"] = $PS["Control.Monad.ST.Internal"] || {};
  var exports = $PS["Control.Monad.ST.Internal"];
  var $foreign = $PS["Control.Monad.ST.Internal"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Data_Functor = $PS["Data.Functor"];          
  var modify = function (f) {
      return $foreign["modify'"](function (s) {
          var s$prime = f(s);
          return {
              state: s$prime,
              value: s$prime
          };
      });
  };
  var functorST = new Data_Functor.Functor($foreign.map_);
  var monadST = new Control_Monad.Monad(function () {
      return applicativeST;
  }, function () {
      return bindST;
  });
  var bindST = new Control_Bind.Bind(function () {
      return applyST;
  }, $foreign.bind_);
  var applyST = new Control_Apply.Apply(function () {
      return functorST;
  }, Control_Monad.ap(monadST));
  var applicativeST = new Control_Applicative.Applicative(function () {
      return applyST;
  }, $foreign.pure_);
  exports["modify"] = modify;
  exports["functorST"] = functorST;
  exports["applyST"] = applyST;
  exports["applicativeST"] = applicativeST;
  exports["new"] = $foreign["new"];
  exports["read"] = $foreign.read;
  exports["write"] = $foreign.write;
})(PS);
(function(exports) {
  "use strict";

  //------------------------------------------------------------------------------
  // Array creation --------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.range = function (start) {
    return function (end) {
      var step = start > end ? -1 : 1;
      var result = new Array(step * (end - start) + 1);
      var i = start, n = 0;
      while (i !== end) {
        result[n++] = i;
        i += step;
      }
      result[n] = i;
      return result;
    };
  };   

  //------------------------------------------------------------------------------
  // Array size ------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.length = function (xs) {
    return xs.length;
  };

  //------------------------------------------------------------------------------
  // Indexed operations ----------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.indexImpl = function (just) {
    return function (nothing) {
      return function (xs) {
        return function (i) {
          return i < 0 || i >= xs.length ? nothing :  just(xs[i]);
        };
      };
    };
  };

  exports.filter = function (f) {
    return function (xs) {
      return xs.filter(f);
    };
  };

  exports.partition = function (f) {
    return function (xs) {
      var yes = [];
      var no  = [];
      for (var i = 0; i < xs.length; i++) {
        var x = xs[i];
        if (f(x))
          yes.push(x);
        else
          no.push(x);
      }
      return { yes: yes, no: no };
    };
  };

  //------------------------------------------------------------------------------
  // Subarrays -------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.slice = function (s) {
    return function (e) {
      return function (l) {
        return l.slice(s, e);
      };
    };
  };
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Array"] = $PS["Data.Array"] || {};
  var exports = $PS["Data.Array"];
  var $foreign = $PS["Data.Array"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Function = $PS["Data.Function"];
  var Data_Maybe = $PS["Data.Maybe"];
  var singleton = function (a) {
      return [ a ];
  };
  var index = $foreign.indexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var concatMap = Data_Function.flip(Control_Bind.bind(Control_Bind.bindArray));
  var mapMaybe = function (f) {
      return concatMap((function () {
          var $94 = Data_Maybe.maybe([  ])(singleton);
          return function ($95) {
              return $94(f($95));
          };
      })());
  };
  exports["index"] = index;
  exports["mapMaybe"] = mapMaybe;
  exports["range"] = $foreign.range;
  exports["length"] = $foreign.length;
  exports["filter"] = $foreign.filter;
  exports["partition"] = $foreign.partition;
  exports["slice"] = $foreign.slice;
})(PS);
(function(exports) {
  "use strict";

  exports.empty = function () {
    return [];
  };

  exports.pushAll = function (as) {
    return function (xs) {
      return function () {
        return xs.push.apply(xs, as);
      };
    };
  };

  exports.unsafeFreeze = function (xs) {
    return function () {
      return xs;
    };
  };

  function copyImpl(xs) {
    return function () {
      return xs.slice();
    };
  }
})(PS["Data.Array.ST"] = PS["Data.Array.ST"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Array.ST"] = $PS["Data.Array.ST"] || {};
  var exports = $PS["Data.Array.ST"];
  var $foreign = $PS["Data.Array.ST"];
  var push = function (a) {
      return $foreign.pushAll([ a ]);
  };
  exports["push"] = push;
  exports["empty"] = $foreign.empty;
  exports["unsafeFreeze"] = $foreign.unsafeFreeze;
})(PS);
(function(exports) {
  "use strict";

  exports.boolConj = function (b1) {
    return function (b2) {
      return b1 && b2;
    };
  };

  exports.boolDisj = function (b1) {
    return function (b2) {
      return b1 || b2;
    };
  };

  exports.boolNot = function (b) {
    return !b;
  };
})(PS["Data.HeytingAlgebra"] = PS["Data.HeytingAlgebra"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.HeytingAlgebra"] = $PS["Data.HeytingAlgebra"] || {};
  var exports = $PS["Data.HeytingAlgebra"];
  var $foreign = $PS["Data.HeytingAlgebra"];
  var HeytingAlgebra = function (conj, disj, ff, implies, not, tt) {
      this.conj = conj;
      this.disj = disj;
      this.ff = ff;
      this.implies = implies;
      this.not = not;
      this.tt = tt;
  };
  var not = function (dict) {
      return dict.not;
  };
  var disj = function (dict) {
      return dict.disj;
  };
  var heytingAlgebraBoolean = new HeytingAlgebra($foreign.boolConj, $foreign.boolDisj, false, function (a) {
      return function (b) {
          return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a))(b);
      };
  }, $foreign.boolNot, true);
  exports["not"] = not;
  exports["heytingAlgebraBoolean"] = heytingAlgebraBoolean;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Array.ST.Iterator"] = $PS["Data.Array.ST.Iterator"] || {};
  var exports = $PS["Data.Array.ST.Iterator"];
  var Control_Monad_ST_Internal = $PS["Control.Monad.ST.Internal"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Maybe = $PS["Data.Maybe"];                
  var Iterator = (function () {
      function Iterator(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Iterator.create = function (value0) {
          return function (value1) {
              return new Iterator(value0, value1);
          };
      };
      return Iterator;
  })();
  var next = function (v) {
      return function __do() {
          var i = Control_Monad_ST_Internal.read(v.value1)();
          Control_Monad_ST_Internal.modify(function (v1) {
              return v1 + 1 | 0;
          })(v.value1)();
          return v.value0(i);
      };
  };                                                    
  var iterator = function (f) {
      return Data_Functor.map(Control_Monad_ST_Internal.functorST)(Iterator.create(f))(Control_Monad_ST_Internal["new"](0));
  };
  var iterate = function (iter) {
      return function (f) {
          return function __do() {
              var $$break = Control_Monad_ST_Internal["new"](false)();
              while (Data_Functor.map(Control_Monad_ST_Internal.functorST)(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean))(Control_Monad_ST_Internal.read($$break))()) {
                  (function __do() {
                      var mx = next(iter)();
                      if (mx instanceof Data_Maybe.Just) {
                          return f(mx.value0)();
                      };
                      if (mx instanceof Data_Maybe.Nothing) {
                          return Data_Functor["void"](Control_Monad_ST_Internal.functorST)(Control_Monad_ST_Internal.write(true)($$break))();
                      };
                      throw new Error("Failed pattern match at Data.Array.ST.Iterator (line 42, column 5 - line 44, column 47): " + [ mx.constructor.name ]);
                  })();
              };
              return {};
          };
      };
  };
  exports["iterator"] = iterator;
  exports["iterate"] = iterate;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Boolean"] = $PS["Data.Boolean"] || {};
  var exports = $PS["Data.Boolean"];
  var otherwise = true;
  exports["otherwise"] = otherwise;
})(PS);
(function(exports) {
  "use strict";

  exports.foldrArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = len - 1; i >= 0; i--) {
          acc = f(xs[i])(acc);
        }
        return acc;
      };
    };
  };

  exports.foldlArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = 0; i < len; i++) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      };
    };
  };
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
  "use strict";

  exports.intDegree = function (x) {
    return Math.min(Math.abs(x), 2147483647);
  };

  // See the Euclidean definition in
  // https://en.m.wikipedia.org/wiki/Modulo_operation.
  exports.intDiv = function (x) {
    return function (y) {
      if (y === 0) return 0;
      return y > 0 ? Math.floor(x / y) : -Math.floor(x / -y);
    };
  };

  exports.intMod = function (x) {
    return function (y) {
      if (y === 0) return 0;
      var yy = Math.abs(y);
      return ((x % yy) + yy) % yy;
    };
  };
})(PS["Data.EuclideanRing"] = PS["Data.EuclideanRing"] || {});
(function(exports) {
  "use strict";

  exports.intSub = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x - y | 0;
    };
  };
})(PS["Data.Ring"] = PS["Data.Ring"] || {});
(function(exports) {
  "use strict";

  exports.intAdd = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x + y | 0;
    };
  };

  exports.intMul = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x * y | 0;
    };
  };
})(PS["Data.Semiring"] = PS["Data.Semiring"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Semiring"] = $PS["Data.Semiring"] || {};
  var exports = $PS["Data.Semiring"];
  var $foreign = $PS["Data.Semiring"];
  var Semiring = function (add, mul, one, zero) {
      this.add = add;
      this.mul = mul;
      this.one = one;
      this.zero = zero;
  };                                                                            
  var semiringInt = new Semiring($foreign.intAdd, $foreign.intMul, 1, 0);
  exports["semiringInt"] = semiringInt;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Ring"] = $PS["Data.Ring"] || {};
  var exports = $PS["Data.Ring"];
  var $foreign = $PS["Data.Ring"];
  var Data_Semiring = $PS["Data.Semiring"];
  var Ring = function (Semiring0, sub) {
      this.Semiring0 = Semiring0;
      this.sub = sub;
  };                  
  var ringInt = new Ring(function () {
      return Data_Semiring.semiringInt;
  }, $foreign.intSub);
  exports["ringInt"] = ringInt;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.CommutativeRing"] = $PS["Data.CommutativeRing"] || {};
  var exports = $PS["Data.CommutativeRing"];
  var Data_Ring = $PS["Data.Ring"];
  var CommutativeRing = function (Ring0) {
      this.Ring0 = Ring0;
  }; 
  var commutativeRingInt = new CommutativeRing(function () {
      return Data_Ring.ringInt;
  });
  exports["commutativeRingInt"] = commutativeRingInt;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.EuclideanRing"] = $PS["Data.EuclideanRing"] || {};
  var exports = $PS["Data.EuclideanRing"];
  var $foreign = $PS["Data.EuclideanRing"];
  var Data_CommutativeRing = $PS["Data.CommutativeRing"];  
  var EuclideanRing = function (CommutativeRing0, degree, div, mod) {
      this.CommutativeRing0 = CommutativeRing0;
      this.degree = degree;
      this.div = div;
      this.mod = mod;
  };
  var mod = function (dict) {
      return dict.mod;
  }; 
  var euclideanRingInt = new EuclideanRing(function () {
      return Data_CommutativeRing.commutativeRingInt;
  }, $foreign.intDegree, $foreign.intDiv, $foreign.intMod);
  var div = function (dict) {
      return dict.div;
  };
  exports["div"] = div;
  exports["mod"] = mod;
  exports["euclideanRingInt"] = euclideanRingInt;
})(PS);
(function(exports) {
  "use strict";

  exports.concatString = function (s1) {
    return function (s2) {
      return s1 + s2;
    };
  };

  exports.concatArray = function (xs) {
    return function (ys) {
      if (xs.length === 0) return ys;
      if (ys.length === 0) return xs;
      return xs.concat(ys);
    };
  };
})(PS["Data.Semigroup"] = PS["Data.Semigroup"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Symbol"] = $PS["Data.Symbol"] || {};
  var exports = $PS["Data.Symbol"];      
  var SProxy = (function () {
      function SProxy() {

      };
      SProxy.value = new SProxy();
      return SProxy;
  })();
  var IsSymbol = function (reflectSymbol) {
      this.reflectSymbol = reflectSymbol;
  };
  var reflectSymbol = function (dict) {
      return dict.reflectSymbol;
  };
  exports["IsSymbol"] = IsSymbol;
  exports["reflectSymbol"] = reflectSymbol;
  exports["SProxy"] = SProxy;
})(PS);
(function(exports) {
  "use strict";

  exports.unsafeGet = function (label) {
    return function (rec) {
      return rec[label];
    };
  };

  exports.unsafeSet = function (label) {
    return function (value) {
      return function (rec) {
        var copy = {};
        for (var key in rec) {
          if ({}.hasOwnProperty.call(rec, key)) {
            copy[key] = rec[key];
          }
        }
        copy[label] = value;
        return copy;
      };
    };
  };
})(PS["Record.Unsafe"] = PS["Record.Unsafe"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Record.Unsafe"] = $PS["Record.Unsafe"] || {};
  var exports = $PS["Record.Unsafe"];
  var $foreign = $PS["Record.Unsafe"];
  exports["unsafeGet"] = $foreign.unsafeGet;
  exports["unsafeSet"] = $foreign.unsafeSet;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Type.Data.RowList"] = $PS["Type.Data.RowList"] || {};
  var exports = $PS["Type.Data.RowList"];
  var RLProxy = (function () {
      function RLProxy() {

      };
      RLProxy.value = new RLProxy();
      return RLProxy;
  })();
  exports["RLProxy"] = RLProxy;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Semigroup"] = $PS["Data.Semigroup"] || {};
  var exports = $PS["Data.Semigroup"];
  var $foreign = $PS["Data.Semigroup"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Record_Unsafe = $PS["Record.Unsafe"];
  var Type_Data_RowList = $PS["Type.Data.RowList"];                
  var SemigroupRecord = function (appendRecord) {
      this.appendRecord = appendRecord;
  };
  var Semigroup = function (append) {
      this.append = append;
  }; 
  var semigroupUnit = new Semigroup(function (v) {
      return function (v1) {
          return Data_Unit.unit;
      };
  });
  var semigroupString = new Semigroup($foreign.concatString);
  var semigroupRecordNil = new SemigroupRecord(function (v) {
      return function (v1) {
          return function (v2) {
              return {};
          };
      };
  });
  var semigroupArray = new Semigroup($foreign.concatArray);
  var appendRecord = function (dict) {
      return dict.appendRecord;
  };
  var semigroupRecord = function (dictRowToList) {
      return function (dictSemigroupRecord) {
          return new Semigroup(appendRecord(dictSemigroupRecord)(Type_Data_RowList.RLProxy.value));
      };
  };
  var append = function (dict) {
      return dict.append;
  };
  var semigroupRecordCons = function (dictIsSymbol) {
      return function (dictCons) {
          return function (dictSemigroupRecord) {
              return function (dictSemigroup) {
                  return new SemigroupRecord(function (v) {
                      return function (ra) {
                          return function (rb) {
                              var tail = appendRecord(dictSemigroupRecord)(Type_Data_RowList.RLProxy.value)(ra)(rb);
                              var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                              var insert = Record_Unsafe.unsafeSet(key);
                              var get = Record_Unsafe.unsafeGet(key);
                              return insert(append(dictSemigroup)(get(ra))(get(rb)))(tail);
                          };
                      };
                  });
              };
          };
      };
  };
  exports["Semigroup"] = Semigroup;
  exports["append"] = append;
  exports["semigroupString"] = semigroupString;
  exports["semigroupUnit"] = semigroupUnit;
  exports["semigroupArray"] = semigroupArray;
  exports["semigroupRecord"] = semigroupRecord;
  exports["semigroupRecordNil"] = semigroupRecordNil;
  exports["semigroupRecordCons"] = semigroupRecordCons;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Monoid"] = $PS["Data.Monoid"] || {};
  var exports = $PS["Data.Monoid"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_EuclideanRing = $PS["Data.EuclideanRing"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Record_Unsafe = $PS["Record.Unsafe"];
  var Type_Data_RowList = $PS["Type.Data.RowList"];                
  var MonoidRecord = function (SemigroupRecord0, memptyRecord) {
      this.SemigroupRecord0 = SemigroupRecord0;
      this.memptyRecord = memptyRecord;
  };
  var Monoid = function (Semigroup0, mempty) {
      this.Semigroup0 = Semigroup0;
      this.mempty = mempty;
  };
  var monoidUnit = new Monoid(function () {
      return Data_Semigroup.semigroupUnit;
  }, Data_Unit.unit);
  var monoidString = new Monoid(function () {
      return Data_Semigroup.semigroupString;
  }, "");
  var monoidRecordNil = new MonoidRecord(function () {
      return Data_Semigroup.semigroupRecordNil;
  }, function (v) {
      return {};
  });                        
  var monoidArray = new Monoid(function () {
      return Data_Semigroup.semigroupArray;
  }, [  ]);
  var memptyRecord = function (dict) {
      return dict.memptyRecord;
  };
  var monoidRecord = function (dictRowToList) {
      return function (dictMonoidRecord) {
          return new Monoid(function () {
              return Data_Semigroup.semigroupRecord()(dictMonoidRecord.SemigroupRecord0());
          }, memptyRecord(dictMonoidRecord)(Type_Data_RowList.RLProxy.value));
      };
  };
  var mempty = function (dict) {
      return dict.mempty;
  };
  var monoidRecordCons = function (dictIsSymbol) {
      return function (dictMonoid) {
          return function (dictCons) {
              return function (dictMonoidRecord) {
                  return new MonoidRecord(function () {
                      return Data_Semigroup.semigroupRecordCons(dictIsSymbol)()(dictMonoidRecord.SemigroupRecord0())(dictMonoid.Semigroup0());
                  }, function (v) {
                      var tail = memptyRecord(dictMonoidRecord)(Type_Data_RowList.RLProxy.value);
                      var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                      var insert = Record_Unsafe.unsafeSet(key);
                      return insert(mempty(dictMonoid))(tail);
                  });
              };
          };
      };
  };
  var power = function (dictMonoid) {
      return function (x) {
          var go = function (p) {
              if (p <= 0) {
                  return mempty(dictMonoid);
              };
              if (p === 1) {
                  return x;
              };
              if (Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(p)(2) === 0) {
                  var x$prime = go(Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(p)(2));
                  return Data_Semigroup.append(dictMonoid.Semigroup0())(x$prime)(x$prime);
              };
              if (Data_Boolean.otherwise) {
                  var x$prime = go(Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(p)(2));
                  return Data_Semigroup.append(dictMonoid.Semigroup0())(x$prime)(Data_Semigroup.append(dictMonoid.Semigroup0())(x$prime)(x));
              };
              throw new Error("Failed pattern match at Data.Monoid (line 65, column 3 - line 65, column 17): " + [ p.constructor.name ]);
          };
          return go;
      };
  };
  exports["Monoid"] = Monoid;
  exports["mempty"] = mempty;
  exports["power"] = power;
  exports["monoidUnit"] = monoidUnit;
  exports["monoidString"] = monoidString;
  exports["monoidArray"] = monoidArray;
  exports["monoidRecord"] = monoidRecord;
  exports["monoidRecordNil"] = monoidRecordNil;
  exports["monoidRecordCons"] = monoidRecordCons;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Foldable"] = $PS["Data.Foldable"] || {};
  var exports = $PS["Data.Foldable"];
  var $foreign = $PS["Data.Foldable"];
  var Control_Category = $PS["Control.Category"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];      
  var Foldable = function (foldMap, foldl, foldr) {
      this.foldMap = foldMap;
      this.foldl = foldl;
      this.foldr = foldr;
  };
  var foldr = function (dict) {
      return dict.foldr;
  };
  var foldl = function (dict) {
      return dict.foldl;
  }; 
  var foldableMaybe = new Foldable(function (dictMonoid) {
      return function (f) {
          return function (v) {
              if (v instanceof Data_Maybe.Nothing) {
                  return Data_Monoid.mempty(dictMonoid);
              };
              if (v instanceof Data_Maybe.Just) {
                  return f(v.value0);
              };
              throw new Error("Failed pattern match at Data.Foldable (line 129, column 1 - line 135, column 27): " + [ f.constructor.name, v.constructor.name ]);
          };
      };
  }, function (v) {
      return function (z) {
          return function (v1) {
              if (v1 instanceof Data_Maybe.Nothing) {
                  return z;
              };
              if (v1 instanceof Data_Maybe.Just) {
                  return v(z)(v1.value0);
              };
              throw new Error("Failed pattern match at Data.Foldable (line 129, column 1 - line 135, column 27): " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
          };
      };
  }, function (v) {
      return function (z) {
          return function (v1) {
              if (v1 instanceof Data_Maybe.Nothing) {
                  return z;
              };
              if (v1 instanceof Data_Maybe.Just) {
                  return v(v1.value0)(z);
              };
              throw new Error("Failed pattern match at Data.Foldable (line 129, column 1 - line 135, column 27): " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
          };
      };
  });
  var foldMapDefaultR = function (dictFoldable) {
      return function (dictMonoid) {
          return function (f) {
              return foldr(dictFoldable)(function (x) {
                  return function (acc) {
                      return Data_Semigroup.append(dictMonoid.Semigroup0())(f(x))(acc);
                  };
              })(Data_Monoid.mempty(dictMonoid));
          };
      };
  };
  var foldableArray = new Foldable(function (dictMonoid) {
      return foldMapDefaultR(foldableArray)(dictMonoid);
  }, $foreign.foldlArray, $foreign.foldrArray);
  var foldMap = function (dict) {
      return dict.foldMap;
  };
  var fold = function (dictFoldable) {
      return function (dictMonoid) {
          return foldMap(dictFoldable)(dictMonoid)(Control_Category.identity(Control_Category.categoryFn));
      };
  };
  exports["Foldable"] = Foldable;
  exports["foldr"] = foldr;
  exports["foldl"] = foldl;
  exports["foldMap"] = foldMap;
  exports["fold"] = fold;
  exports["foldableArray"] = foldableArray;
  exports["foldableMaybe"] = foldableMaybe;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.ArrayView.Internal"] = $PS["Data.ArrayView.Internal"] || {};
  var exports = $PS["Data.ArrayView.Internal"];
  var Data_Array = $PS["Data.Array"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var ArrayToView = function (use) {
      this.use = use;
  };
  var use = function (dict) {
      return dict.use;
  };
  var toArray = function (v) {
      if (v.from === 0 && Data_Array.length(v.arr) === v.len) {
          return v.arr;
      };
      if (Data_Boolean.otherwise) {
          return Data_Array.slice(v.from)(v.from + v.len | 0)(v.arr);
      };
      throw new Error("Failed pattern match at Data.ArrayView.Internal (line 167, column 1 - line 167, column 30): " + [ v.constructor.name ]);
  };       
  var length = function (v) {
      return v.len;
  }; 
  var fromArray = function (arr) {
      var len = Data_Array.length(arr);
      return {
          from: 0,
          len: len,
          arr: arr
      };
  };
  var functorArrayView = new Data_Functor.Functor(function (f) {
      var $99 = Data_Functor.map(Data_Functor.functorArray)(f);
      return function ($100) {
          return fromArray($99(toArray($100)));
      };
  });                                                                                       
  var foldableArrayView = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          var $101 = Data_Foldable.foldMap(Data_Foldable.foldableArray)(dictMonoid)(f);
          return function ($102) {
              return $101(toArray($102));
          };
      };
  }, function (f) {
      return function (z) {
          var $103 = Data_Foldable.foldl(Data_Foldable.foldableArray)(f)(z);
          return function ($104) {
              return $103(toArray($104));
          };
      };
  }, function (f) {
      return function (z) {
          var $105 = Data_Foldable.foldr(Data_Foldable.foldableArray)(f)(z);
          return function ($106) {
              return $105(toArray($106));
          };
      };
  });
  var empty = {
      from: 0,
      len: 0,
      arr: [  ]
  };
  var arrayToViewTo = function (dictArrayToView) {
      return new ArrayToView((function () {
          var $124 = Data_Functor.map(functorArrayView)(use(dictArrayToView));
          return function ($125) {
              return toArray($124($125));
          };
      })());
  };
  var arrayToViewId = new ArrayToView(function (x) {
      return x;
  });
  var arrayToViewFrom = function (dictArrayToView) {
      return new ArrayToView((function () {
          var $128 = Data_Functor.map(Data_Functor.functorArray)(use(dictArrayToView));
          return function ($129) {
              return fromArray($128($129));
          };
      })());
  };
  var arrayToViewBi = function (dictArrayToView) {
      return function (dictArrayToView1) {
          return new ArrayToView(function (f) {
              return function (x) {
                  return use(dictArrayToView1)(f(use(dictArrayToView)(x)));
              };
          });
      };
  }; 
  var semigroupArrayView = new Data_Semigroup.Semigroup(use(arrayToViewBi(arrayToViewTo(arrayToViewId))(arrayToViewBi(arrayToViewTo(arrayToViewId))(arrayToViewFrom(arrayToViewId))))(Data_Semigroup.append(Data_Semigroup.semigroupArray)));
  var monoidArrayView = new Data_Monoid.Monoid(function () {
      return semigroupArrayView;
  }, empty);
  exports["fromArray"] = fromArray;
  exports["foldableArrayView"] = foldableArrayView;
  exports["monoidArrayView"] = monoidArrayView;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.ArrayView"] = $PS["Data.ArrayView"] || {};
  var exports = $PS["Data.ArrayView"];
  var Data_ArrayView_Internal = $PS["Data.ArrayView.Internal"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Monoid = $PS["Data.Monoid"];
  var toNonNegative = function (n) {
      var $52 = n > 0;
      if ($52) {
          return n;
      };
      return 0;
  };                                                                                                                                                                                                                                                                                                                                         
  var slice = function (start$prime) {
      return function (end$prime) {
          return function (v) {
              var fix = function (n) {
                  if (n < 0) {
                      return v.len + n | 0;
                  };
                  if (Data_Boolean.otherwise) {
                      return n;
                  };
                  throw new Error("Failed pattern match at Data.ArrayView (line 241, column 5 - line 243, column 22): " + [ n.constructor.name ]);
              };
              var between = function (lb) {
                  return function (ub) {
                      return function (n) {
                          var $61 = n < lb;
                          if ($61) {
                              return lb;
                          };
                          var $62 = n > ub;
                          if ($62) {
                              return ub;
                          };
                          return n;
                      };
                  };
              };
              var end = between(0)(v.len)(fix(end$prime));
              var start = between(0)(v.len)(fix(start$prime));
              var $63 = end <= start || start >= v.len;
              if ($63) {
                  return Data_Monoid.mempty(Data_ArrayView_Internal.monoidArrayView);
              };
              return {
                  from: v.from + start | 0,
                  len: end - start | 0,
                  arr: v.arr
              };
          };
      };
  };
  var take = function (n) {
      return slice(0)(toNonNegative(n));
  };
  exports["take"] = take;
})(PS);
(function(exports) {
  "use strict";

  exports.topInt = 2147483647;
  exports.bottomInt = -2147483648;

  exports.topChar = String.fromCharCode(65535);
  exports.bottomChar = String.fromCharCode(0);
})(PS["Data.Bounded"] = PS["Data.Bounded"] || {});
(function(exports) {
  "use strict";

  var unsafeCompareImpl = function (lt) {
    return function (eq) {
      return function (gt) {
        return function (x) {
          return function (y) {
            return x < y ? lt : x === y ? eq : gt;
          };
        };
      };
    };
  };                                         
  exports.ordIntImpl = unsafeCompareImpl;   
  exports.ordCharImpl = unsafeCompareImpl;
})(PS["Data.Ord"] = PS["Data.Ord"] || {});
(function(exports) {
  "use strict";

  var refEq = function (r1) {
    return function (r2) {
      return r1 === r2;
    };
  };                            
  exports.eqIntImpl = refEq;   
  exports.eqCharImpl = refEq;
})(PS["Data.Eq"] = PS["Data.Eq"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Eq"] = $PS["Data.Eq"] || {};
  var exports = $PS["Data.Eq"];
  var $foreign = $PS["Data.Eq"];
  var Eq = function (eq) {
      this.eq = eq;
  };                                           
  var eqInt = new Eq($foreign.eqIntImpl);
  var eqChar = new Eq($foreign.eqCharImpl);
  exports["eqInt"] = eqInt;
  exports["eqChar"] = eqChar;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Ordering"] = $PS["Data.Ordering"] || {};
  var exports = $PS["Data.Ordering"];              
  var LT = (function () {
      function LT() {

      };
      LT.value = new LT();
      return LT;
  })();
  var GT = (function () {
      function GT() {

      };
      GT.value = new GT();
      return GT;
  })();
  var EQ = (function () {
      function EQ() {

      };
      EQ.value = new EQ();
      return EQ;
  })();
  exports["LT"] = LT;
  exports["GT"] = GT;
  exports["EQ"] = EQ;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Ord"] = $PS["Data.Ord"] || {};
  var exports = $PS["Data.Ord"];
  var $foreign = $PS["Data.Ord"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Ord = function (Eq0, compare) {
      this.Eq0 = Eq0;
      this.compare = compare;
  };                                                                                                 
  var ordInt = new Ord(function () {
      return Data_Eq.eqInt;
  }, $foreign.ordIntImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value));
  var ordChar = new Ord(function () {
      return Data_Eq.eqChar;
  }, $foreign.ordCharImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value));
  exports["ordInt"] = ordInt;
  exports["ordChar"] = ordChar;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Bounded"] = $PS["Data.Bounded"] || {};
  var exports = $PS["Data.Bounded"];
  var $foreign = $PS["Data.Bounded"];
  var Data_Ord = $PS["Data.Ord"];                  
  var Bounded = function (Ord0, bottom, top) {
      this.Ord0 = Ord0;
      this.bottom = bottom;
      this.top = top;
  };
  var top = function (dict) {
      return dict.top;
  };                                            
  var boundedInt = new Bounded(function () {
      return Data_Ord.ordInt;
  }, $foreign.bottomInt, $foreign.topInt);
  var boundedChar = new Bounded(function () {
      return Data_Ord.ordChar;
  }, $foreign.bottomChar, $foreign.topChar);
  var bottom = function (dict) {
      return dict.bottom;
  };
  exports["bottom"] = bottom;
  exports["top"] = top;
  exports["boundedInt"] = boundedInt;
  exports["boundedChar"] = boundedChar;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Either"] = $PS["Data.Either"] || {};
  var exports = $PS["Data.Either"];                
  var Left = (function () {
      function Left(value0) {
          this.value0 = value0;
      };
      Left.create = function (value0) {
          return new Left(value0);
      };
      return Left;
  })();
  var Right = (function () {
      function Right(value0) {
          this.value0 = value0;
      };
      Right.create = function (value0) {
          return new Right(value0);
      };
      return Right;
  })();
  exports["Left"] = Left;
  exports["Right"] = Right;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Compactable"] = $PS["Data.Compactable"] || {};
  var exports = $PS["Data.Compactable"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Monad_ST_Internal = $PS["Control.Monad.ST.Internal"];
  var Data_Array = $PS["Data.Array"];
  var Data_Array_ST = $PS["Data.Array.ST"];
  var Data_Array_ST_Iterator = $PS["Data.Array.ST.Iterator"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];              
  var Compactable = function (compact, separate) {
      this.compact = compact;
      this.separate = separate;
  };
  var compactableArray = new Compactable(function (xs) {
      return (function __do() {
          var result = Data_Array_ST.empty();
          var iter = Data_Array_ST_Iterator.iterator(function (v) {
              return Data_Array.index(xs)(v);
          })();
          Data_Array_ST_Iterator.iterate(iter)((function () {
              var $77 = Data_Functor["void"](Control_Monad_ST_Internal.functorST);
              return function ($78) {
                  return $77((function (v) {
                      if (v instanceof Data_Maybe.Nothing) {
                          return Control_Applicative.pure(Control_Monad_ST_Internal.applicativeST)(0);
                      };
                      if (v instanceof Data_Maybe.Just) {
                          return Data_Array_ST.push(v.value0)(result);
                      };
                      throw new Error("Failed pattern match at Data.Compactable (line 111, column 34 - line 113, column 35): " + [ v.constructor.name ]);
                  })($78));
              };
          })())();
          return Data_Array_ST.unsafeFreeze(result)();
      })();
  }, function (xs) {
      return (function __do() {
          var ls = Data_Array_ST.empty();
          var rs = Data_Array_ST.empty();
          var iter = Data_Array_ST_Iterator.iterator(function (v) {
              return Data_Array.index(xs)(v);
          })();
          Data_Array_ST_Iterator.iterate(iter)((function () {
              var $79 = Data_Functor["void"](Control_Monad_ST_Internal.functorST);
              return function ($80) {
                  return $79((function (v) {
                      if (v instanceof Data_Either.Left) {
                          return Data_Array_ST.push(v.value0)(ls);
                      };
                      if (v instanceof Data_Either.Right) {
                          return Data_Array_ST.push(v.value0)(rs);
                      };
                      throw new Error("Failed pattern match at Data.Compactable (line 122, column 34 - line 124, column 31): " + [ v.constructor.name ]);
                  })($80));
              };
          })())();
          return Control_Apply.apply(Control_Monad_ST_Internal.applyST)(Data_Functor.map(Control_Monad_ST_Internal.functorST)(function (v) {
              return function (v1) {
                  return {
                      left: v,
                      right: v1
                  };
              };
          })(Data_Array_ST.unsafeFreeze(ls)))(Data_Array_ST.unsafeFreeze(rs))();
      })();
  });
  exports["compactableArray"] = compactableArray;
})(PS);
(function(exports) {
  "use strict";

  exports.toCharCode = function (c) {
    return c.charCodeAt(0);
  };

  exports.fromCharCode = function (c) {
    return String.fromCharCode(c);
  };
})(PS["Data.Enum"] = PS["Data.Enum"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Enum"] = $PS["Data.Enum"] || {};
  var exports = $PS["Data.Enum"];
  var $foreign = $PS["Data.Enum"];
  var Data_Bounded = $PS["Data.Bounded"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Enum = function (Ord0, pred, succ) {
      this.Ord0 = Ord0;
      this.pred = pred;
      this.succ = succ;
  };
  var BoundedEnum = function (Bounded0, Enum1, cardinality, fromEnum, toEnum) {
      this.Bounded0 = Bounded0;
      this.Enum1 = Enum1;
      this.cardinality = cardinality;
      this.fromEnum = fromEnum;
      this.toEnum = toEnum;
  };
  var toEnum = function (dict) {
      return dict.toEnum;
  };              
  var fromEnum = function (dict) {
      return dict.fromEnum;
  };
  var toEnumWithDefaults = function (dictBoundedEnum) {
      return function (low) {
          return function (high) {
              return function (x) {
                  var v = toEnum(dictBoundedEnum)(x);
                  if (v instanceof Data_Maybe.Just) {
                      return v.value0;
                  };
                  if (v instanceof Data_Maybe.Nothing) {
                      var $54 = x < fromEnum(dictBoundedEnum)(Data_Bounded.bottom(dictBoundedEnum.Bounded0()));
                      if ($54) {
                          return low;
                      };
                      return high;
                  };
                  throw new Error("Failed pattern match at Data.Enum (line 158, column 33 - line 160, column 62): " + [ v.constructor.name ]);
              };
          };
      };
  };
  var defaultSucc = function (toEnum$prime) {
      return function (fromEnum$prime) {
          return function (a) {
              return toEnum$prime(fromEnum$prime(a) + 1 | 0);
          };
      };
  };
  var defaultPred = function (toEnum$prime) {
      return function (fromEnum$prime) {
          return function (a) {
              return toEnum$prime(fromEnum$prime(a) - 1 | 0);
          };
      };
  };
  var charToEnum = function (v) {
      if (v >= Data_Bounded.bottom(Data_Bounded.boundedInt) && v <= Data_Bounded.top(Data_Bounded.boundedInt)) {
          return new Data_Maybe.Just($foreign.fromCharCode(v));
      };
      return Data_Maybe.Nothing.value;
  };
  var enumChar = new Enum(function () {
      return Data_Ord.ordChar;
  }, defaultPred(charToEnum)($foreign.toCharCode), defaultSucc(charToEnum)($foreign.toCharCode));
  var boundedEnumChar = new BoundedEnum(function () {
      return Data_Bounded.boundedChar;
  }, function () {
      return enumChar;
  }, $foreign.toCharCode(Data_Bounded.top(Data_Bounded.boundedChar)) - $foreign.toCharCode(Data_Bounded.bottom(Data_Bounded.boundedChar)) | 0, $foreign.toCharCode, charToEnum);
  exports["fromEnum"] = fromEnum;
  exports["toEnumWithDefaults"] = toEnumWithDefaults;
  exports["boundedEnumChar"] = boundedEnumChar;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Filterable"] = $PS["Data.Filterable"] || {};
  var exports = $PS["Data.Filterable"];
  var Data_Array = $PS["Data.Array"];
  var Data_Compactable = $PS["Data.Compactable"];
  var Data_Either = $PS["Data.Either"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Semigroup = $PS["Data.Semigroup"];                
  var Filterable = function (Compactable0, Functor1, filter, filterMap, partition, partitionMap) {
      this.Compactable0 = Compactable0;
      this.Functor1 = Functor1;
      this.filter = filter;
      this.filterMap = filterMap;
      this.partition = partition;
      this.partitionMap = partitionMap;
  };
  var partition = function (dict) {
      return dict.partition;
  }; 
  var filterableArray = new Filterable(function () {
      return Data_Compactable.compactableArray;
  }, function () {
      return Data_Functor.functorArray;
  }, Data_Array.filter, Data_Array.mapMaybe, Data_Array.partition, function (p) {
      var go = function (acc) {
          return function (x) {
              var v = p(x);
              if (v instanceof Data_Either.Left) {
                  return {
                      left: Data_Semigroup.append(Data_Semigroup.semigroupArray)(acc.left)([ v.value0 ]),
                      right: acc.right
                  };
              };
              if (v instanceof Data_Either.Right) {
                  return {
                      right: Data_Semigroup.append(Data_Semigroup.semigroupArray)(acc.right)([ v.value0 ]),
                      left: acc.left
                  };
              };
              throw new Error("Failed pattern match at Data.Filterable (line 149, column 16 - line 151, column 50): " + [ v.constructor.name ]);
          };
      };
      return Data_Foldable.foldl(Data_Foldable.foldableArray)(go)({
          left: [  ],
          right: [  ]
      });
  });
  var filterMap = function (dict) {
      return dict.filterMap;
  };
  var filter = function (dict) {
      return dict.filter;
  };
  exports["filterMap"] = filterMap;
  exports["filterableArray"] = filterableArray;
})(PS);
(function(exports) {
  "use strict";

  exports.fromNumberImpl = function (just) {
    return function (nothing) {
      return function (n) {
        /* jshint bitwise: false */
        return (n | 0) === n ? just(n) : nothing;
      };
    };
  };

  exports.toNumber = function (n) {
    return n;
  };

  exports.toStringAs = function (radix) {
    return function (i) {
      return i.toString(radix);
    };
  };
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function(exports) {
  /* globals exports */
  "use strict";         

  exports.infinity = Infinity;
})(PS["Global"] = PS["Global"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Global"] = $PS["Global"] || {};
  var exports = $PS["Global"];
  var $foreign = $PS["Global"];
  exports["infinity"] = $foreign.infinity;
})(PS);
(function(exports) {
  "use strict";          

  exports.floor = Math.floor;

  exports.remainder = function (n) {
    return function (m) {
      return n % m;
    };
  };

  exports.round = Math.round;
})(PS["Math"] = PS["Math"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Math"] = $PS["Math"] || {};
  var exports = $PS["Math"];
  var $foreign = $PS["Math"];
  exports["floor"] = $foreign.floor;
  exports["round"] = $foreign.round;
  exports["remainder"] = $foreign.remainder;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Int"] = $PS["Data.Int"] || {};
  var exports = $PS["Data.Int"];
  var $foreign = $PS["Data.Int"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Bounded = $PS["Data.Bounded"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Global = $PS["Global"];
  var $$Math = $PS["Math"];
  var radix = function (n) {
      if (n >= 2 && n <= 36) {
          return new Data_Maybe.Just(n);
      };
      if (Data_Boolean.otherwise) {
          return Data_Maybe.Nothing.value;
      };
      throw new Error("Failed pattern match at Data.Int (line 193, column 1 - line 193, column 28): " + [ n.constructor.name ]);
  };                                
  var fromNumber = $foreign.fromNumberImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var unsafeClamp = function (x) {
      if (x === Global.infinity) {
          return 0;
      };
      if (x === -Global.infinity) {
          return 0;
      };
      if (x >= $foreign.toNumber(Data_Bounded.top(Data_Bounded.boundedInt))) {
          return Data_Bounded.top(Data_Bounded.boundedInt);
      };
      if (x <= $foreign.toNumber(Data_Bounded.bottom(Data_Bounded.boundedInt))) {
          return Data_Bounded.bottom(Data_Bounded.boundedInt);
      };
      if (Data_Boolean.otherwise) {
          return Data_Maybe.fromMaybe(0)(fromNumber(x));
      };
      throw new Error("Failed pattern match at Data.Int (line 66, column 1 - line 66, column 29): " + [ x.constructor.name ]);
  };
  var round = function ($23) {
      return unsafeClamp($$Math.round($23));
  };
  var floor = function ($24) {
      return unsafeClamp($$Math.floor($24));
  };
  exports["floor"] = floor;
  exports["round"] = round;
  exports["radix"] = radix;
  exports["toNumber"] = $foreign.toNumber;
  exports["toStringAs"] = $foreign.toStringAs;
})(PS);
(function(exports) {
  /* global exports */
  "use strict";

  var createDate = function (y, m, d, h, mi, s, ms) {
    var date = new Date(Date.UTC(y, m, d, h, mi, s, ms));
    if (y >= 0 && y < 100) {
      date.setUTCFullYear(y);
    }
    return date;
  };

  exports.now = function () {
    return new Date();
  };

  exports.jsdate = function (parts) {
    return createDate(parts.year, parts.month, parts.day, parts.hour, parts.minute, parts.second, parts.millisecond);
  };

  exports.dateMethod = function (method, date) {
    return date[method]();
  };
})(PS["Data.JSDate"] = PS["Data.JSDate"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.JSDate"] = $PS["Data.JSDate"] || {};
  var exports = $PS["Data.JSDate"];
  var $foreign = $PS["Data.JSDate"];
  var getTime = function (dt) {
      return $foreign.dateMethod("getTime", dt);
  };
  exports["getTime"] = getTime;
  exports["jsdate"] = $foreign.jsdate;
  exports["now"] = $foreign.now;
})(PS);
(function(exports) {
  "use strict";          

  exports.nullable = function (a, r, f) {
    return a == null ? r : f(a);
  };
})(PS["Data.Nullable"] = PS["Data.Nullable"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Nullable"] = $PS["Data.Nullable"] || {};
  var exports = $PS["Data.Nullable"];
  var $foreign = $PS["Data.Nullable"];
  var Data_Maybe = $PS["Data.Maybe"];                                   
  var toMaybe = function (n) {
      return $foreign.nullable(n, Data_Maybe.Nothing.value, Data_Maybe.Just.create);
  };
  exports["toMaybe"] = toMaybe;
})(PS);
(function(exports) {
  "use strict";

  exports.showIntImpl = function (n) {
    return n.toString();
  };

  exports.showNumberImpl = function (n) {
    var str = n.toString();
    return isNaN(str + ".0") ? str : str + ".0";
  };
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Show"] = $PS["Data.Show"] || {};
  var exports = $PS["Data.Show"];
  var $foreign = $PS["Data.Show"];
  var Show = function (show) {
      this.show = show;
  };
  var showNumber = new Show($foreign.showNumberImpl);
  var showInt = new Show($foreign.showIntImpl);
  var show = function (dict) {
      return dict.show;
  };
  exports["show"] = show;
  exports["showInt"] = showInt;
  exports["showNumber"] = showNumber;
})(PS);
(function(exports) {
  "use strict";
  /* global Symbol */

  var hasArrayFrom = typeof Array.from === "function";
  var hasStringIterator =
    typeof Symbol !== "undefined" &&
    Symbol != null &&
    typeof Symbol.iterator !== "undefined" &&
    typeof String.prototype[Symbol.iterator] === "function";
  var hasFromCodePoint = typeof String.prototype.fromCodePoint === "function";
  var hasCodePointAt = typeof String.prototype.codePointAt === "function";

  exports._unsafeCodePointAt0 = function (fallback) {
    return hasCodePointAt
      ? function (str) { return str.codePointAt(0); }
      : fallback;
  };

  exports._singleton = function (fallback) {
    return hasFromCodePoint ? String.fromCodePoint : fallback;
  };

  exports._take = function (fallback) {
    return function (n) {
      if (hasStringIterator) {
        return function (str) {
          var accum = "";
          var iter = str[Symbol.iterator]();
          for (var i = 0; i < n; ++i) {
            var o = iter.next();
            if (o.done) return accum;
            accum += o.value;
          }
          return accum;
        };
      }
      return fallback(n);
    };
  };

  exports._toCodePointArray = function (fallback) {
    return function (unsafeCodePointAt0) {
      if (hasArrayFrom) {
        return function (str) {
          return Array.from(str, unsafeCodePointAt0);
        };
      }
      return fallback;
    };
  };
})(PS["Data.String.CodePoints"] = PS["Data.String.CodePoints"] || {});
(function(exports) {
  "use strict";

  exports.singleton = function (c) {
    return c;
  };

  exports.length = function (s) {
    return s.length;
  };

  exports.drop = function (n) {
    return function (s) {
      return s.substring(n);
    };
  };
})(PS["Data.String.CodeUnits"] = PS["Data.String.CodeUnits"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.String.CodeUnits"] = $PS["Data.String.CodeUnits"] || {};
  var exports = $PS["Data.String.CodeUnits"];
  var $foreign = $PS["Data.String.CodeUnits"];
  exports["singleton"] = $foreign.singleton;
  exports["length"] = $foreign.length;
  exports["drop"] = $foreign.drop;
})(PS);
(function(exports) {
  "use strict";

  exports.charAt = function (i) {
    return function (s) {
      if (i >= 0 && i < s.length) return s.charAt(i);
      throw new Error("Data.String.Unsafe.charAt: Invalid index.");
    };
  };
})(PS["Data.String.Unsafe"] = PS["Data.String.Unsafe"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.String.Unsafe"] = $PS["Data.String.Unsafe"] || {};
  var exports = $PS["Data.String.Unsafe"];
  var $foreign = $PS["Data.String.Unsafe"];
  exports["charAt"] = $foreign.charAt;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Tuple"] = $PS["Data.Tuple"] || {};
  var exports = $PS["Data.Tuple"];                         
  var Tuple = (function () {
      function Tuple(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Tuple.create = function (value0) {
          return function (value1) {
              return new Tuple(value0, value1);
          };
      };
      return Tuple;
  })();
  var snd = function (v) {
      return v.value1;
  };                                                                                                    
  var fst = function (v) {
      return v.value0;
  };
  exports["Tuple"] = Tuple;
  exports["fst"] = fst;
  exports["snd"] = snd;
})(PS);
(function(exports) {
  "use strict";

  exports.unfoldrArrayImpl = function (isNothing) {
    return function (fromJust) {
      return function (fst) {
        return function (snd) {
          return function (f) {
            return function (b) {
              var result = [];
              var value = b;
              while (true) { // eslint-disable-line no-constant-condition
                var maybe = f(value);
                if (isNothing(maybe)) return result;
                var tuple = fromJust(maybe);
                result.push(fst(tuple));
                value = snd(tuple);
              }
            };
          };
        };
      };
    };
  };
})(PS["Data.Unfoldable"] = PS["Data.Unfoldable"] || {});
(function(exports) {
  "use strict";

  exports.unfoldr1ArrayImpl = function (isNothing) {
    return function (fromJust) {
      return function (fst) {
        return function (snd) {
          return function (f) {
            return function (b) {
              var result = [];
              var value = b;
              while (true) { // eslint-disable-line no-constant-condition
                var tuple = f(value);
                result.push(fst(tuple));
                var maybe = snd(tuple);
                if (isNothing(maybe)) return result;
                value = fromJust(maybe);
              }
            };
          };
        };
      };
    };
  };
})(PS["Data.Unfoldable1"] = PS["Data.Unfoldable1"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Unfoldable1"] = $PS["Data.Unfoldable1"] || {};
  var exports = $PS["Data.Unfoldable1"];
  var $foreign = $PS["Data.Unfoldable1"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Tuple = $PS["Data.Tuple"];                
  var Unfoldable1 = function (unfoldr1) {
      this.unfoldr1 = unfoldr1;
  }; 
  var unfoldable1Array = new Unfoldable1($foreign.unfoldr1ArrayImpl(Data_Maybe.isNothing)(Data_Maybe.fromJust())(Data_Tuple.fst)(Data_Tuple.snd));
  exports["unfoldable1Array"] = unfoldable1Array;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Unfoldable"] = $PS["Data.Unfoldable"] || {};
  var exports = $PS["Data.Unfoldable"];
  var $foreign = $PS["Data.Unfoldable"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable1 = $PS["Data.Unfoldable1"];  
  var Unfoldable = function (Unfoldable10, unfoldr) {
      this.Unfoldable10 = Unfoldable10;
      this.unfoldr = unfoldr;
  };
  var unfoldr = function (dict) {
      return dict.unfoldr;
  }; 
  var unfoldableArray = new Unfoldable(function () {
      return Data_Unfoldable1.unfoldable1Array;
  }, $foreign.unfoldrArrayImpl(Data_Maybe.isNothing)(Data_Maybe.fromJust())(Data_Tuple.fst)(Data_Tuple.snd));
  exports["unfoldr"] = unfoldr;
  exports["unfoldableArray"] = unfoldableArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.String.CodePoints"] = $PS["Data.String.CodePoints"] || {};
  var exports = $PS["Data.String.CodePoints"];
  var $foreign = $PS["Data.String.CodePoints"];
  var Data_Array = $PS["Data.Array"];
  var Data_Bounded = $PS["Data.Bounded"];
  var Data_Enum = $PS["Data.Enum"];
  var Data_EuclideanRing = $PS["Data.EuclideanRing"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_String_CodeUnits = $PS["Data.String.CodeUnits"];
  var Data_String_Unsafe = $PS["Data.String.Unsafe"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];
  var unsurrogate = function (lead) {
      return function (trail) {
          return (((lead - 55296 | 0) * 1024 | 0) + (trail - 56320 | 0) | 0) + 65536 | 0;
      };
  }; 
  var isTrail = function (cu) {
      return 56320 <= cu && cu <= 57343;
  };
  var isLead = function (cu) {
      return 55296 <= cu && cu <= 56319;
  };
  var uncons = function (s) {
      var v = Data_String_CodeUnits.length(s);
      if (v === 0) {
          return Data_Maybe.Nothing.value;
      };
      if (v === 1) {
          return new Data_Maybe.Just({
              head: Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s)),
              tail: ""
          });
      };
      var cu1 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(1)(s));
      var cu0 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s));
      var $21 = isLead(cu0) && isTrail(cu1);
      if ($21) {
          return new Data_Maybe.Just({
              head: unsurrogate(cu0)(cu1),
              tail: Data_String_CodeUnits.drop(2)(s)
          });
      };
      return new Data_Maybe.Just({
          head: cu0,
          tail: Data_String_CodeUnits.drop(1)(s)
      });
  };
  var unconsButWithTuple = function (s) {
      return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
          return new Data_Tuple.Tuple(v.head, v.tail);
      })(uncons(s));
  };
  var toCodePointArrayFallback = function (s) {
      return Data_Unfoldable.unfoldr(Data_Unfoldable.unfoldableArray)(unconsButWithTuple)(s);
  };
  var unsafeCodePointAt0Fallback = function (s) {
      var cu0 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s));
      var $25 = isLead(cu0) && Data_String_CodeUnits.length(s) > 1;
      if ($25) {
          var cu1 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(1)(s));
          var $26 = isTrail(cu1);
          if ($26) {
              return unsurrogate(cu0)(cu1);
          };
          return cu0;
      };
      return cu0;
  };
  var unsafeCodePointAt0 = $foreign["_unsafeCodePointAt0"](unsafeCodePointAt0Fallback);
  var toCodePointArray = $foreign["_toCodePointArray"](toCodePointArrayFallback)(unsafeCodePointAt0);
  var length = function ($52) {
      return Data_Array.length(toCodePointArray($52));
  };
  var fromCharCode = (function () {
      var $53 = Data_Enum.toEnumWithDefaults(Data_Enum.boundedEnumChar)(Data_Bounded.bottom(Data_Bounded.boundedChar))(Data_Bounded.top(Data_Bounded.boundedChar));
      return function ($54) {
          return Data_String_CodeUnits.singleton($53($54));
      };
  })();
  var singletonFallback = function (v) {
      if (v <= 65535) {
          return fromCharCode(v);
      };
      var lead = Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(v - 65536 | 0)(1024) + 55296 | 0;
      var trail = Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(v - 65536 | 0)(1024) + 56320 | 0;
      return fromCharCode(lead) + fromCharCode(trail);
  };                                                                          
  var singleton = $foreign["_singleton"](singletonFallback);
  var takeFallback = function (n) {
      return function (v) {
          if (n < 1) {
              return "";
          };
          var v1 = uncons(v);
          if (v1 instanceof Data_Maybe.Just) {
              return singleton(v1.value0.head) + takeFallback(n - 1 | 0)(v1.value0.tail);
          };
          return v;
      };
  };
  var take = $foreign["_take"](takeFallback);
  var drop = function (n) {
      return function (s) {
          return Data_String_CodeUnits.drop(Data_String_CodeUnits.length(take(n)(s)))(s);
      };
  };
  exports["length"] = length;
})(PS);
(function(exports) {
  "use strict";

  // jshint maxparams: 3

  exports.traverseArrayImpl = function () {
    function array1(a) {
      return [a];
    }

    function array2(a) {
      return function (b) {
        return [a, b];
      };
    }

    function array3(a) {
      return function (b) {
        return function (c) {
          return [a, b, c];
        };
      };
    }

    function concat2(xs) {
      return function (ys) {
        return xs.concat(ys);
      };
    }

    return function (apply) {
      return function (map) {
        return function (pure) {
          return function (f) {
            return function (array) {
              function go(bot, top) {
                switch (top - bot) {
                case 0: return pure([]);
                case 1: return map(array1)(f(array[bot]));
                case 2: return apply(map(array2)(f(array[bot])))(f(array[bot + 1]));
                case 3: return apply(apply(map(array3)(f(array[bot])))(f(array[bot + 1])))(f(array[bot + 2]));
                default:
                  // This slightly tricky pivot selection aims to produce two
                  // even-length partitions where possible.
                  var pivot = bot + Math.floor((top - bot) / 4) * 2;
                  return apply(map(concat2)(go(bot, pivot)))(go(pivot, top));
                }
              }
              return go(0, array.length);
            };
          };
        };
      };
    };
  }();
})(PS["Data.Traversable"] = PS["Data.Traversable"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Traversable"] = $PS["Data.Traversable"] || {};
  var exports = $PS["Data.Traversable"];
  var $foreign = $PS["Data.Traversable"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Category = $PS["Control.Category"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];                                                      
  var Traversable = function (Foldable1, Functor0, sequence, traverse) {
      this.Foldable1 = Foldable1;
      this.Functor0 = Functor0;
      this.sequence = sequence;
      this.traverse = traverse;
  };
  var traverse = function (dict) {
      return dict.traverse;
  }; 
  var sequenceDefault = function (dictTraversable) {
      return function (dictApplicative) {
          return traverse(dictTraversable)(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
      };
  };
  var traversableArray = new Traversable(function () {
      return Data_Foldable.foldableArray;
  }, function () {
      return Data_Functor.functorArray;
  }, function (dictApplicative) {
      return sequenceDefault(traversableArray)(dictApplicative);
  }, function (dictApplicative) {
      return $foreign.traverseArrayImpl(Control_Apply.apply(dictApplicative.Apply0()))(Data_Functor.map((dictApplicative.Apply0()).Functor0()))(Control_Applicative.pure(dictApplicative));
  });
  exports["traverse"] = traverse;
  exports["traversableArray"] = traversableArray;
})(PS);
(function(exports) {
  "use strict";

  exports.pureE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };
})(PS["Effect"] = PS["Effect"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Effect"] = $PS["Effect"] || {};
  var exports = $PS["Effect"];
  var $foreign = $PS["Effect"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];                
  var monadEffect = new Control_Monad.Monad(function () {
      return applicativeEffect;
  }, function () {
      return bindEffect;
  });
  var bindEffect = new Control_Bind.Bind(function () {
      return applyEffect;
  }, $foreign.bindE);
  var applyEffect = new Control_Apply.Apply(function () {
      return functorEffect;
  }, Control_Monad.ap(monadEffect));
  var applicativeEffect = new Control_Applicative.Applicative(function () {
      return applyEffect;
  }, $foreign.pureE);
  var functorEffect = new Data_Functor.Functor(Control_Applicative.liftA1(applicativeEffect));
  var semigroupEffect = function (dictSemigroup) {
      return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyEffect)(Data_Semigroup.append(dictSemigroup)));
  };
  var monoidEffect = function (dictMonoid) {
      return new Data_Monoid.Monoid(function () {
          return semigroupEffect(dictMonoid.Semigroup0());
      }, $foreign.pureE(Data_Monoid.mempty(dictMonoid)));
  };
  exports["functorEffect"] = functorEffect;
  exports["applyEffect"] = applyEffect;
  exports["applicativeEffect"] = applicativeEffect;
  exports["bindEffect"] = bindEffect;
  exports["monadEffect"] = monadEffect;
  exports["monoidEffect"] = monoidEffect;
})(PS);
(function(exports) {
  "use strict";

  exports.log = function (s) {
    return function () {
      console.log(s);
      return {};
    };
  };
})(PS["Effect.Console"] = PS["Effect.Console"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Effect.Console"] = $PS["Effect.Console"] || {};
  var exports = $PS["Effect.Console"];
  var $foreign = $PS["Effect.Console"];
  exports["log"] = $foreign.log;
})(PS);
(function(exports) {
  /* global exports */
  "use strict";

  exports.setInterval = function (ms) {
    return function (fn) {
      return function () {
        return setInterval(fn, ms);
      };
    };
  };
})(PS["Effect.Timer"] = PS["Effect.Timer"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Effect.Timer"] = $PS["Effect.Timer"] || {};
  var exports = $PS["Effect.Timer"];
  var $foreign = $PS["Effect.Timer"];
  exports["setInterval"] = $foreign.setInterval;
})(PS);
(function(exports) {
  "use strict";

  exports.add = function(list) {
    return function(token) {
      return function() {
        return list.add(token);
      };
    };
  };

  exports.remove = function(list) {
    return function(token) {
      return function() {
        return list.remove(token);
      };
    };
  };
})(PS["Web.DOM.DOMTokenList"] = PS["Web.DOM.DOMTokenList"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Web.DOM.DOMTokenList"] = $PS["Web.DOM.DOMTokenList"] || {};
  var exports = $PS["Web.DOM.DOMTokenList"];
  var $foreign = $PS["Web.DOM.DOMTokenList"];
  exports["add"] = $foreign.add;
  exports["remove"] = $foreign.remove;
})(PS);
(function(exports) {
  "use strict";

  // module Unsafe.Coerce

  exports.unsafeCoerce = function (x) {
    return x;
  };
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Unsafe.Coerce"] = $PS["Unsafe.Coerce"] || {};
  var exports = $PS["Unsafe.Coerce"];
  var $foreign = $PS["Unsafe.Coerce"];
  exports["unsafeCoerce"] = $foreign.unsafeCoerce;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Web.DOM.Document"] = $PS["Web.DOM.Document"] || {};
  var exports = $PS["Web.DOM.Document"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                      
  var toParentNode = Unsafe_Coerce.unsafeCoerce;
  exports["toParentNode"] = toParentNode;
})(PS);
(function(exports) {
  "use strict";

  exports.classList = function (element) {
    return function () {
      return element.classList;
    };
  };

  exports.setAttribute = function (name) {
    return function (value) {
      return function (element) {
        return function () {
          element.setAttribute(name, value);
          return {};
        };
      };
    };
  };
})(PS["Web.DOM.Element"] = PS["Web.DOM.Element"] || {});
(function(exports) {
  "use strict";

  exports._unsafeReadProtoTagged = function (nothing, just, name, value) {
    if (typeof window !== "undefined") {
      var ty = window[name];
      if (ty != null && value instanceof ty) {
        return just(value);
      }
      return nothing;
    } 
    var obj = value;
    while (obj != null) {
      var proto = Object.getPrototypeOf(obj);
      var constructorName = proto.constructor.name;
      if (constructorName === name) {
        return just(value);
      } else if (constructorName === "Object") {
        return nothing;
      }
      obj = proto;
    }
    return nothing;
  };
})(PS["Web.Internal.FFI"] = PS["Web.Internal.FFI"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Web.Internal.FFI"] = $PS["Web.Internal.FFI"] || {};
  var exports = $PS["Web.Internal.FFI"];
  var $foreign = $PS["Web.Internal.FFI"];
  var Data_Maybe = $PS["Data.Maybe"];                
  var unsafeReadProtoTagged = function (name) {
      return function (value) {
          return $foreign["_unsafeReadProtoTagged"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, name, value);
      };
  };
  exports["unsafeReadProtoTagged"] = unsafeReadProtoTagged;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Web.DOM.Element"] = $PS["Web.DOM.Element"] || {};
  var exports = $PS["Web.DOM.Element"];
  var $foreign = $PS["Web.DOM.Element"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var Web_Internal_FFI = $PS["Web.Internal.FFI"];             
  var toNode = Unsafe_Coerce.unsafeCoerce;
  var toEventTarget = Unsafe_Coerce.unsafeCoerce;                                      
  var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("Element");
  exports["fromNode"] = fromNode;
  exports["toNode"] = toNode;
  exports["toEventTarget"] = toEventTarget;
  exports["classList"] = $foreign.classList;
  exports["setAttribute"] = $foreign.setAttribute;
})(PS);
(function(exports) {
  "use strict";                                   

  exports.setTextContent = function (value) {
    return function (node) {
      return function () {
        node.textContent = value;
        return {};
      };
    };
  };
})(PS["Web.DOM.Node"] = PS["Web.DOM.Node"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Web.DOM.Node"] = $PS["Web.DOM.Node"] || {};
  var exports = $PS["Web.DOM.Node"];
  var $foreign = $PS["Web.DOM.Node"];
  exports["setTextContent"] = $foreign.setTextContent;
})(PS);
(function(exports) {
  "use strict";

  exports.toArray = function (list) {
    return function () {
      return [].slice.call(list);
    };
  };
})(PS["Web.DOM.NodeList"] = PS["Web.DOM.NodeList"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Web.DOM.NodeList"] = $PS["Web.DOM.NodeList"] || {};
  var exports = $PS["Web.DOM.NodeList"];
  var $foreign = $PS["Web.DOM.NodeList"];
  exports["toArray"] = $foreign.toArray;
})(PS);
(function(exports) {
  "use strict";

  exports.querySelectorAll = function (selector) {
    return function (node) {
      return function () {
        return node.querySelectorAll(selector);
      };
    };
  };
})(PS["Web.DOM.ParentNode"] = PS["Web.DOM.ParentNode"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Web.DOM.ParentNode"] = $PS["Web.DOM.ParentNode"] || {};
  var exports = $PS["Web.DOM.ParentNode"];
  var $foreign = $PS["Web.DOM.ParentNode"];
  exports["querySelectorAll"] = $foreign.querySelectorAll;
})(PS);
(function(exports) {
  "use strict";

  exports._currentTarget = function (e) {
    return e.currentTarget;
  };
})(PS["Web.Event.Event"] = PS["Web.Event.Event"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Web.Event.Event"] = $PS["Web.Event.Event"] || {};
  var exports = $PS["Web.Event.Event"];
  var $foreign = $PS["Web.Event.Event"];
  var Data_Nullable = $PS["Data.Nullable"];
  var currentTarget = function ($8) {
      return Data_Nullable.toMaybe($foreign["_currentTarget"]($8));
  };
  exports["currentTarget"] = currentTarget;
})(PS);
(function(exports) {
  "use strict";

  exports.eventListener = function (fn) {
    return function () {
      return function (event) {
        return fn(event)();
      };
    };
  };

  exports.addEventListener = function (type) {
    return function (listener) {
      return function (useCapture) {
        return function (target) {
          return function () {
            return target.addEventListener(type, listener, useCapture);
          };
        };
      };
    };
  };
})(PS["Web.Event.EventTarget"] = PS["Web.Event.EventTarget"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Web.Event.EventTarget"] = $PS["Web.Event.EventTarget"] || {};
  var exports = $PS["Web.Event.EventTarget"];
  var $foreign = $PS["Web.Event.EventTarget"];
  exports["eventListener"] = $foreign.eventListener;
  exports["addEventListener"] = $foreign.addEventListener;
})(PS);
(function(exports) {
  /* global window */
  "use strict";

  exports.window = function () {
    return window;
  };
})(PS["Web.HTML"] = PS["Web.HTML"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Web.HTML"] = $PS["Web.HTML"] || {};
  var exports = $PS["Web.HTML"];
  var $foreign = $PS["Web.HTML"];
  exports["window"] = $foreign.window;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Web.HTML.HTMLDocument"] = $PS["Web.HTML.HTMLDocument"] || {};
  var exports = $PS["Web.HTML.HTMLDocument"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];      
  var toDocument = Unsafe_Coerce.unsafeCoerce;
  exports["toDocument"] = toDocument;
})(PS);
(function(exports) {
  "use strict";

  exports._read = function (nothing, just, value) {
    var tag = Object.prototype.toString.call(value);
    if (tag.indexOf("[object HTML") === 0 && tag.indexOf("Element]") === tag.length - 8) {
      return just(value);
    } else {
      return nothing;
    }
  };

  // - CSSOM ---------------------------------------------------------------------

  exports.getBoundingClientRect = function (el) {
    return function () {
      var rect = el.getBoundingClientRect();
      return {
        top: rect.top,
        right: rect.right,
        bottom: rect.bottom,
        left: rect.left,
        width: rect.width,
        height: rect.height
      };
    };
  };
})(PS["Web.HTML.HTMLElement"] = PS["Web.HTML.HTMLElement"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Web.HTML.HTMLElement"] = $PS["Web.HTML.HTMLElement"] || {};
  var exports = $PS["Web.HTML.HTMLElement"];
  var $foreign = $PS["Web.HTML.HTMLElement"];
  var Data_Maybe = $PS["Data.Maybe"];
  var fromEventTarget = function (x) {
      return $foreign["_read"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);
  };
  exports["fromEventTarget"] = fromEventTarget;
  exports["getBoundingClientRect"] = $foreign.getBoundingClientRect;
})(PS);
(function(exports) {
  "use strict";

  exports.document = function (window) {
    return function () {
      return window.document;
    };
  };
})(PS["Web.HTML.Window"] = PS["Web.HTML.Window"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Web.HTML.Window"] = $PS["Web.HTML.Window"] || {};
  var exports = $PS["Web.HTML.Window"];
  var $foreign = $PS["Web.HTML.Window"];
  exports["document"] = $foreign.document;
})(PS);
(function(exports) {
  "use strict";

  exports.clientX = function (e) {
    return e.clientX;
  };

  exports.clientY = function (e) {
    return e.clientY;
  };
})(PS["Web.UIEvent.MouseEvent"] = PS["Web.UIEvent.MouseEvent"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Web.UIEvent.MouseEvent"] = $PS["Web.UIEvent.MouseEvent"] || {};
  var exports = $PS["Web.UIEvent.MouseEvent"];
  var $foreign = $PS["Web.UIEvent.MouseEvent"];
  var Web_Internal_FFI = $PS["Web.Internal.FFI"];                        
  var fromEvent = Web_Internal_FFI.unsafeReadProtoTagged("MouseEvent");
  exports["fromEvent"] = fromEvent;
  exports["clientX"] = $foreign.clientX;
  exports["clientY"] = $foreign.clientY;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Main"] = $PS["Main"] || {};
  var exports = $PS["Main"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Maybe_Trans = $PS["Control.Monad.Maybe.Trans"];
  var Control_Monad_Trans_Class = $PS["Control.Monad.Trans.Class"];
  var Data_Array = $PS["Data.Array"];
  var Data_ArrayView = $PS["Data.ArrayView"];
  var Data_ArrayView_Internal = $PS["Data.ArrayView.Internal"];
  var Data_EuclideanRing = $PS["Data.EuclideanRing"];
  var Data_Filterable = $PS["Data.Filterable"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Int = $PS["Data.Int"];
  var Data_JSDate = $PS["Data.JSDate"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Show = $PS["Data.Show"];
  var Data_String_CodePoints = $PS["Data.String.CodePoints"];
  var Data_String_CodeUnits = $PS["Data.String.CodeUnits"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Effect = $PS["Effect"];
  var Effect_Console = $PS["Effect.Console"];
  var Effect_Timer = $PS["Effect.Timer"];
  var $$Math = $PS["Math"];
  var Web_DOM_DOMTokenList = $PS["Web.DOM.DOMTokenList"];
  var Web_DOM_Document = $PS["Web.DOM.Document"];
  var Web_DOM_Element = $PS["Web.DOM.Element"];
  var Web_DOM_Node = $PS["Web.DOM.Node"];
  var Web_DOM_NodeList = $PS["Web.DOM.NodeList"];
  var Web_DOM_ParentNode = $PS["Web.DOM.ParentNode"];
  var Web_Event_Event = $PS["Web.Event.Event"];
  var Web_Event_EventTarget = $PS["Web.Event.EventTarget"];
  var Web_HTML = $PS["Web.HTML"];
  var Web_HTML_HTMLDocument = $PS["Web.HTML.HTMLDocument"];
  var Web_HTML_HTMLElement = $PS["Web.HTML.HTMLElement"];
  var Web_HTML_Window = $PS["Web.HTML.Window"];
  var Web_UIEvent_MouseEvent = $PS["Web.UIEvent.MouseEvent"];                
  var None = (function () {
      function None() {

      };
      None.value = new None();
      return None;
  })();
  var ImageComponent = (function () {
      function ImageComponent(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ImageComponent.create = function (value0) {
          return function (value1) {
              return new ImageComponent(value0, value1);
          };
      };
      return ImageComponent;
  })();
  var SunMoonComponent = (function () {
      function SunMoonComponent(value0) {
          this.value0 = value0;
      };
      SunMoonComponent.create = function (value0) {
          return new SunMoonComponent(value0);
      };
      return SunMoonComponent;
  })();
  var TextComponent = (function () {
      function TextComponent(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      TextComponent.create = function (value0) {
          return function (value1) {
              return new TextComponent(value0, value1);
          };
      };
      return TextComponent;
  })();
  var LinearComponent = (function () {
      function LinearComponent(value0) {
          this.value0 = value0;
      };
      LinearComponent.create = function (value0) {
          return new LinearComponent(value0);
      };
      return LinearComponent;
  })();
  var SenaryComponent = (function () {
      function SenaryComponent(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SenaryComponent.create = function (value0) {
          return function (value1) {
              return new SenaryComponent(value0, value1);
          };
      };
      return SenaryComponent;
  })();
  var ThemeComponent = (function () {
      function ThemeComponent(value0) {
          this.value0 = value0;
      };
      ThemeComponent.create = function (value0) {
          return new ThemeComponent(value0);
      };
      return ThemeComponent;
  })();
  var sunMoonRadius = 46.7654;
  var seasons = [ "Egg", "Larva", "Pupa", "Worker", "Drone", "Queen" ];
  var removeClass = function (c) {
      return function (e) {
          return Control_Bind.bind(Effect.bindEffect)(Web_DOM_Element.classList(e))(Data_Function.flip(Web_DOM_DOMTokenList.remove)(c));
      };
  };
  var padLeft = function (width) {
      return function (c) {
          return function (s) {
              return Data_Monoid.power(Data_Monoid.monoidString)(Data_String_CodeUnits.singleton(c))(width - Data_String_CodePoints.length(s) | 0) + s;
          };
      };
  };
  var toSenary = function (width) {
      return function (value) {
          var base6 = Data_Maybe.fromJust()(Data_Int.radix(6));
          return padLeft(width)("0")(Data_Int.toStringAs(base6)(value));
      };
  };
  var mythCycle = (function () {
      var mythName = function (v) {
          return function (v1) {
              return {
                  sajemTan: v,
                  english: v1
              };
          };
      };
      return [ mythName("Divolm")("Thunder"), mythName("Telzlnoln")("Rain"), mythName("Jidolk")("Flower"), mythName("Shelsheln")("River"), mythName("Thefam")("Stone"), mythName("Zatheln")("Spider"), mythName("Kizhult")("Bee"), mythName("Thefnolm")("Bear"), mythName("Vithit")("Bird") ];
  })();
  var main = Data_Monoid.mempty(Effect.monoidEffect(Data_Monoid.monoidUnit));
  var letterCycle = (function () {
      var letterName = function (v) {
          return function (v1) {
              return function (v2) {
                  return {
                      sajemTan: v,
                      english: v1,
                      orthographic: v2
                  };
              };
          };
      };
      return [ letterName("Duhdem")("Dam")("d"), letterName("Gigim")("Flipper")("g"), letterName("Xataxym")("Pit")("x"), letterName("Jegen")("Hook")("j"), letterName("Fijyc")("Rainbow")("f"), letterName("Voljam")("Ear")("v"), letterName("Thethat")("Wind")("th"), letterName("Sekelt")("Valley")("s"), letterName("Zuhzuhmelt")("Ladle")("z"), letterName("Shuhzhik")("Tear")("sh"), letterName("Zhizlik")("Fish")("zh"), letterName("Slik")("Thumbs-up")("sl"), letterName("Zlolfit")("Wing")("zl"), letterName("Molmelc")("Roof")("m"), letterName("Nyzlan")("Snail")("n"), letterName("Nasham")("Wave")("a"), letterName("Xelteln")("Cliff")("el"), letterName("Tezet")("Lightning")("e"), letterName("Tolmolm")("Slope")("ol"), letterName("Mizizlat")("Cart")("i"), letterName("Slysyc")("Snake")("y"), letterName("Shnuhk")("Lips")("uh"), letterName("Tuln")("Eye")("ul"), letterName("Cuhc")("Foot")("c"), letterName("Tytyt")("Clover")("t"), letterName("Kyfik")("Arm")("k"), letterName("Zlnanic")("Chameleon")("ah"), letterName("Thnuhduhk")("Elephant")("eh"), letterName("Snolzem")("Knot")("o"), letterName("Vmyn")("Mouth")("u") ];
  })();
  var honeyDurations = (function () {
      var subsecond = 4.0 * 36.0;
      var second = subsecond * 36.0;
      var minute = second * 36.0;
      var hour = minute * 36.0;
      var day = hour * 10.0;
      var month = day * 30.0;
      var season = month * 2.0;
      var week = day * 6.0;
      var year = day * 360.0;
      return {
          year: year,
          season: season,
          month: month,
          week: week,
          day: day,
          hour: hour,
          minute: minute,
          second: second,
          subsecond: subsecond
      };
  })();
  var elementsBySelector = function (selector) {
      return function __do() {
          var w = Web_HTML.window();
          var d = Web_HTML_Window.document(w)();
          Effect_Console.log(selector)();
          var r = Web_DOM_ParentNode.querySelectorAll(selector)(Web_DOM_Document.toParentNode(Web_HTML_HTMLDocument.toDocument(d)))();
          var l = Data_Functor.map(Effect.functorEffect)((function () {
              var $112 = Data_Show.show(Data_Show.showInt);
              return function ($113) {
                  return $112(Data_Array.length($113));
              };
          })())(Web_DOM_NodeList.toArray(r))();
          Effect_Console.log(l)();
          return Data_Functor.map(Effect.functorEffect)(Data_Filterable.filterMap(Data_Filterable.filterableArray)(Web_DOM_Element.fromNode))(Web_DOM_NodeList.toArray(r))();
      };
  };
  var getGraphicalDisplay = (function () {
      var themeComponent = Data_Functor.map(Effect.functorEffect)(ThemeComponent.create)(elementsBySelector("body"));
      var senaryComponent = function (name) {
          var selectorFor = function (p) {
              return function (i) {
                  return Data_Foldable.fold(Data_Foldable.foldableArray)(Data_Monoid.monoidString)([ ".", name, "-", p, " .cell", Data_Show.show(Data_Show.showInt)(i) ]);
              };
          };
          return Control_Apply.apply(Effect.applyEffect)(Data_Functor.map(Effect.functorEffect)(SenaryComponent.create)(Data_Traversable.traverse(Data_Traversable.traversableArray)(Effect.applicativeEffect)(elementsBySelector)(Data_Functor.map(Data_Functor.functorArray)(selectorFor("units"))(Data_Array.range(0)(5)))))(Data_Traversable.traverse(Data_Traversable.traversableArray)(Effect.applicativeEffect)(elementsBySelector)(Data_Functor.map(Data_Functor.functorArray)(selectorFor("sixes"))(Data_Array.range(0)(5))));
      };
      var rotateComponent = function (name) {
          return Data_Functor.map(Effect.functorEffect)(SunMoonComponent.create)(elementsBySelector(".clock-dial ." + name));
      };
      var linearComponent = function (name) {
          return function (n) {
              var selectorFor = function (i) {
                  return Data_Foldable.fold(Data_Foldable.foldableArray)(Data_Monoid.monoidString)([ ".", name, " .cell", Data_Show.show(Data_Show.showInt)(i) ]);
              };
              return Data_Functor.map(Effect.functorEffect)(LinearComponent.create)(Data_Traversable.traverse(Data_Traversable.traversableArray)(Effect.applicativeEffect)(elementsBySelector)(Data_Functor.map(Data_Functor.functorArray)(selectorFor)(Data_Array.range(0)(n))));
          };
      };
      var imageComponent = function (name) {
          return function (useIdPrefix) {
              return Data_Functor.flap(Effect.functorEffect)(Data_Functor.map(Effect.functorEffect)(ImageComponent.create)(elementsBySelector(".myth-dial ." + name)))(useIdPrefix);
          };
      };
      return Control_Apply.apply(Effect.applyEffect)(Control_Apply.apply(Effect.applyEffect)(Control_Apply.apply(Effect.applyEffect)(Control_Apply.apply(Effect.applyEffect)(Control_Apply.apply(Effect.applyEffect)(Control_Apply.apply(Effect.applyEffect)(Control_Apply.apply(Effect.applyEffect)(Control_Apply.apply(Effect.applyEffect)(Control_Apply.apply(Effect.applyEffect)(Control_Apply.apply(Effect.applyEffect)(Control_Apply.apply(Effect.applyEffect)(Control_Apply.apply(Effect.applyEffect)(Data_Functor.map(Effect.functorEffect)(function (v) {
          return function (v1) {
              return function (v2) {
                  return function (v3) {
                      return function (v4) {
                          return function (v5) {
                              return function (v6) {
                                  return function (v7) {
                                      return function (v8) {
                                          return function (v9) {
                                              return function (v10) {
                                                  return function (v11) {
                                                      return function (v12) {
                                                          return {
                                                              year: v,
                                                              season: v1,
                                                              month: v2,
                                                              week: v3,
                                                              dayOfMonth: v4,
                                                              mythRole: v5,
                                                              mythNumber: v6,
                                                              hour: v7,
                                                              minute: v8,
                                                              second: v9,
                                                              subsecond: v10,
                                                              sunMoon: v11,
                                                              theme: v12,
                                                              dayOfYear: None.value
                                                          };
                                                      };
                                                  };
                                              };
                                          };
                                      };
                                  };
                              };
                          };
                      };
                  };
              };
          };
      })(imageComponent("year")("honey")))(linearComponent("season")(6)))(linearComponent("month")(12)))(linearComponent("week")(60)))(linearComponent("day-of-month")(30)))(linearComponent("myth-role")(9)))(linearComponent("myth-number")(40)))(linearComponent("hours-ring")(10)))(senaryComponent("minute")))(senaryComponent("second")))(senaryComponent("subsecond")))(rotateComponent("sun-moon-dial")))(themeComponent);
  })();
  var getTextualDisplay = (function () {
      var getClass = Data_Semigroup.append(Data_Semigroup.semigroupString)(".textual-display .");
      var textComponent = function (n) {
          return function (formatFn) {
              return Data_Functor.flap(Effect.functorEffect)(Data_Functor.map(Effect.functorEffect)(TextComponent.create)(elementsBySelector(getClass(n))))(formatFn);
          };
      };
      var formatSeason = function (i) {
          return Data_Foldable.fold(Data_Foldable.foldableMaybe)(Data_Monoid.monoidString)(Data_Array.index(seasons)(i)) + " Season";
      };
      var formatMythRole = function (i) {
          return (Data_Foldable.fold(Data_Foldable.foldableMaybe)(Data_Monoid.monoidRecord()(Data_Monoid.monoidRecordCons(new Data_Symbol.IsSymbol(function () {
              return "english";
          }))(Data_Monoid.monoidString)()(Data_Monoid.monoidRecordCons(new Data_Symbol.IsSymbol(function () {
              return "sajemTan";
          }))(Data_Monoid.monoidString)()(Data_Monoid.monoidRecordNil))))(Data_Array.index(mythCycle)(i))).sajemTan;
      };
      var formatDay = function (i) {
          return (Data_Foldable.fold(Data_Foldable.foldableMaybe)(Data_Monoid.monoidRecord()(Data_Monoid.monoidRecordCons(new Data_Symbol.IsSymbol(function () {
              return "english";
          }))(Data_Monoid.monoidString)()(Data_Monoid.monoidRecordCons(new Data_Symbol.IsSymbol(function () {
              return "orthographic";
          }))(Data_Monoid.monoidString)()(Data_Monoid.monoidRecordCons(new Data_Symbol.IsSymbol(function () {
              return "sajemTan";
          }))(Data_Monoid.monoidString)()(Data_Monoid.monoidRecordNil)))))(Data_Array.index(letterCycle)(i))).sajemTan;
      };
      return Control_Apply.apply(Effect.applyEffect)(Control_Apply.apply(Effect.applyEffect)(Control_Apply.apply(Effect.applyEffect)(Control_Apply.apply(Effect.applyEffect)(Control_Apply.apply(Effect.applyEffect)(Control_Apply.apply(Effect.applyEffect)(Control_Apply.apply(Effect.applyEffect)(Control_Apply.apply(Effect.applyEffect)(Control_Apply.apply(Effect.applyEffect)(Data_Functor.map(Effect.functorEffect)(function (v) {
          return function (v1) {
              return function (v2) {
                  return function (v3) {
                      return function (v4) {
                          return function (v5) {
                              return function (v6) {
                                  return function (v7) {
                                      return function (v8) {
                                          return function (v9) {
                                              return {
                                                  year: v,
                                                  season: v1,
                                                  month: v2,
                                                  dayOfMonth: v3,
                                                  mythRole: v4,
                                                  mythNumber: v5,
                                                  hour: v6,
                                                  minute: v7,
                                                  second: v8,
                                                  subsecond: v9,
                                                  sunMoon: None.value,
                                                  week: None.value,
                                                  dayOfYear: None.value,
                                                  theme: None.value
                                              };
                                          };
                                      };
                                  };
                              };
                          };
                      };
                  };
              };
          };
      })(textComponent("year")(Data_Show.show(Data_Show.showInt))))(textComponent("season")(formatSeason)))(textComponent("month")(Data_Show.show(Data_Show.showInt))))(textComponent("day")(formatDay)))(textComponent("myth-role")(formatMythRole)))(textComponent("myth-number")(Data_Show.show(Data_Show.showInt))))(textComponent("hours")(Data_Show.show(Data_Show.showInt))))(textComponent("minutes")(toSenary(2))))(textComponent("seconds")(toSenary(2))))(textComponent("subseconds")(toSenary(2)));
  })();
  var handleMouseMove = function (e) {
      return Data_Functor["void"](Effect.functorEffect)(Control_Monad_Maybe_Trans.runMaybeT(Control_Bind.bind(Control_Monad_Maybe_Trans.bindMaybeT(Effect.monadEffect))(Data_Newtype.wrap(Control_Monad_Maybe_Trans.newtypeMaybeT)(Control_Applicative.pure(Effect.applicativeEffect)(Web_UIEvent_MouseEvent.fromEvent(e))))(function (mevent) {
          return Control_Bind.bind(Control_Monad_Maybe_Trans.bindMaybeT(Effect.monadEffect))(Control_Monad_Trans_Class.lift(Control_Monad_Maybe_Trans.monadTransMaybeT)(Effect.monadEffect)(elementsBySelector("fePointLight")))(function (pointLights) {
              return Control_Bind.bind(Control_Monad_Maybe_Trans.bindMaybeT(Effect.monadEffect))(Data_Newtype.wrap(Control_Monad_Maybe_Trans.newtypeMaybeT)(Control_Applicative.pure(Effect.applicativeEffect)(Control_Bind.bind(Data_Maybe.bindMaybe)(Web_Event_Event.currentTarget(e))(Web_HTML_HTMLElement.fromEventTarget))))(function (t) {
                  return Control_Bind.bind(Control_Monad_Maybe_Trans.bindMaybeT(Effect.monadEffect))(Control_Monad_Trans_Class.lift(Control_Monad_Maybe_Trans.monadTransMaybeT)(Effect.monadEffect)(Web_HTML_HTMLElement.getBoundingClientRect(t)))(function (v) {
                      var percentX = (Data_Int.toNumber(Web_UIEvent_MouseEvent.clientX(mevent)) - v.left) / (v.right - v.left);
                      var percentY = (Data_Int.toNumber(Web_UIEvent_MouseEvent.clientY(mevent)) - v.top) / (v.bottom - v.top);
                      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Maybe_Trans.bindMaybeT(Effect.monadEffect))(Control_Monad_Trans_Class.lift(Control_Monad_Maybe_Trans.monadTransMaybeT)(Effect.monadEffect)(Data_Foldable.foldMap(Data_Foldable.foldableArray)(Effect.monoidEffect(Data_Monoid.monoidUnit))(Web_DOM_Element.setAttribute("x")(Data_Show.show(Data_Show.showNumber)(percentX)))(pointLights)))(function () {
                          return Control_Monad_Trans_Class.lift(Control_Monad_Maybe_Trans.monadTransMaybeT)(Effect.monadEffect)(Data_Foldable.foldMap(Data_Foldable.foldableArray)(Effect.monoidEffect(Data_Monoid.monoidUnit))(Web_DOM_Element.setAttribute("y")(Data_Show.show(Data_Show.showNumber)(percentY)))(pointLights));
                      });
                  });
              });
          });
      })));
  };
  var creation = Data_JSDate.jsdate({
      year: 2015.0,
      month: 10.0,
      day: 29.0,
      hour: 23.0,
      minute: 34.0,
      second: 14.0,
      millisecond: 0.0
  });
  var gregorianToHoney = function (date) {
      var millis = Data_JSDate.getTime(date) - Data_JSDate.getTime(creation);
      var year = Data_Int.floor(millis / honeyDurations.year);
      var _of = function (minor) {
          return function (major) {
              return Data_Int.floor($$Math.remainder(millis)(major(honeyDurations)) / minor(honeyDurations));
          };
      };
      var dayOfMonth = _of(function (v) {
          return v.day;
      })(function (v) {
          return v.month;
      });
      var dayOfYear = _of(function (v) {
          return v.day;
      })(function (v) {
          return v.year;
      });
      var mythNumber = Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(dayOfYear)(40);
      var mythRole = Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(dayOfYear)(9);
      var hour = _of(function (v) {
          return v.hour;
      })(function (v) {
          return v.day;
      });
      var minute = _of(function (v) {
          return v.minute;
      })(function (v) {
          return v.hour;
      });
      var month = _of(function (v) {
          return v.month;
      })(function (v) {
          return v.year;
      });
      var season = _of(function (v) {
          return v.season;
      })(function (v) {
          return v.year;
      });
      var second = _of(function (v) {
          return v.second;
      })(function (v) {
          return v.minute;
      });
      var subsecond = _of(function (v) {
          return v.subsecond;
      })(function (v) {
          return v.second;
      });
      var sunMoon = Data_Int.round((Data_Int.toNumber(_of(function (v) {
          return v.minute;
      })(function (v) {
          return v.day;
      })) / 360.0) * (sunMoonRadius * -2.0) * 2.0);
      var week = _of(function (v) {
          return v.week;
      })(function (v) {
          return v.year;
      });
      return {
          year: year,
          season: season,
          month: month,
          dayOfYear: dayOfYear,
          dayOfMonth: dayOfMonth,
          week: week,
          mythRole: mythRole,
          mythNumber: mythNumber,
          hour: hour,
          minute: minute,
          second: second,
          subsecond: subsecond,
          sunMoon: sunMoon,
          theme: 0
      };
  };
  var attachPointLightHandler = function __do() {
      var listener = Web_Event_EventTarget.eventListener(handleMouseMove)();
      var body = Data_Functor.map(Effect.functorEffect)(Data_Functor.map(Data_Functor.functorArray)(Web_DOM_Element.toEventTarget))(elementsBySelector("body"))();
      return Data_Foldable.foldMap(Data_Foldable.foldableArray)(Effect.monoidEffect(Data_Monoid.monoidUnit))(Web_Event_EventTarget.addEventListener("mousemove")(listener)(false))(body)();
  };
  var addClass = function (c) {
      return function (e) {
          return Control_Bind.bind(Effect.bindEffect)(Web_DOM_Element.classList(e))(Data_Function.flip(Web_DOM_DOMTokenList.add)(c));
      };
  };
  var setDisplay = function (date) {
      return function (display) {
          var setTheme = function (dictPartial) {
              return function (v) {
                  return function (v1) {
                      if (v instanceof None) {
                          return Data_Monoid.mempty(Effect.monoidEffect(Data_Monoid.monoidUnit));
                      };
                      if (v instanceof ThemeComponent) {
                          var lastMythRole = (function () {
                              var $100 = v1 === 0;
                              if ($100) {
                                  return 9;
                              };
                              return v1;
                          })();
                          return Data_Foldable.foldMap(Data_Foldable.foldableArray)(Effect.monoidEffect(Data_Monoid.monoidUnit))(function (e) {
                              return Control_Apply.applySecond(Effect.applyEffect)(Control_Apply.applySecond(Effect.applyEffect)(Control_Apply.applySecond(Effect.applyEffect)(Control_Apply.applySecond(Effect.applyEffect)(Control_Apply.applySecond(Effect.applyEffect)(removeClass("theme-0")(e))(removeClass("theme-" + Data_Show.show(Data_Show.showInt)(lastMythRole))(e)))(removeClass("theme-0-controls")(e)))(removeClass("theme-" + (Data_Show.show(Data_Show.showInt)(lastMythRole) + "-controls"))(e)))(addClass("theme-" + Data_Show.show(Data_Show.showInt)(v1 + 1 | 0))(e)))(addClass("theme-" + (Data_Show.show(Data_Show.showInt)(v1 + 1 | 0) + "-controls"))(e));
                          })(v.value0);
                      };
                      throw new Error("Failed pattern match at Main (line 310, column 5 - line 310, column 66): " + [ v.constructor.name, v1.constructor.name ]);
                  };
              };
          };
          var setText = function (es) {
              return function (t) {
                  return Data_Foldable.foldMap(Data_Foldable.foldableArray)(Effect.monoidEffect(Data_Monoid.monoidUnit))((function () {
                      var $114 = Web_DOM_Node.setTextContent(t);
                      return function ($115) {
                          return $114(Web_DOM_Element.toNode($115));
                      };
                  })())(es);
              };
          };
          var setSunMoonDial = function (es) {
              return function (v) {
                  var negRadius = "-" + Data_Show.show(Data_Show.showNumber)(sunMoonRadius);
                  var base = "translate(" + (negRadius + (" " + (negRadius + ")")));
                  return Data_Foldable.foldMap(Data_Foldable.foldableArray)(Effect.monoidEffect(Data_Monoid.monoidUnit))(Web_DOM_Element.setAttribute("transform")(base + (" translate(" + (Data_Show.show(Data_Show.showInt)(v) + ")"))))(es);
              };
          };
          var setImage = function (es) {
              return function (useId) {
                  return Data_Foldable.foldMap(Data_Foldable.foldableArray)(Effect.monoidEffect(Data_Monoid.monoidUnit))(Web_DOM_Element.setAttribute("xlink:href")(useId))(es);
              };
          };
          var setElements = function (es) {
              return function (digit) {
                  return function __do() {
                      Data_Foldable.foldMap(Data_Foldable.foldableArray)(Effect.monoidEffect(Data_Monoid.monoidUnit))(Data_Foldable.foldMap(Data_Foldable.foldableArray)(Effect.monoidEffect(Data_Monoid.monoidUnit))(removeClass("active")))(es)();
                      Data_Foldable.foldMap(Data_Foldable.foldableArray)(Effect.monoidEffect(Data_Monoid.monoidUnit))(Data_Foldable.foldMap(Data_Foldable.foldableArray)(Effect.monoidEffect(Data_Monoid.monoidUnit))(removeClass("filled")))(es)();
                      Data_Foldable.foldMap(Data_Foldable.foldableArray)(Effect.monoidEffect(Data_Monoid.monoidUnit))(addClass("active"))(Data_Foldable.fold(Data_Foldable.foldableMaybe)(Data_Monoid.monoidArray)(Data_Array.index(es)(digit)))();
                      return Data_Foldable.foldMap(Data_ArrayView_Internal.foldableArrayView)(Effect.monoidEffect(Data_Monoid.monoidUnit))(Data_Foldable.foldMap(Data_Foldable.foldableArray)(Effect.monoidEffect(Data_Monoid.monoidUnit))(addClass("filled")))(Data_ArrayView.take(digit)(Data_ArrayView_Internal.fromArray(es)))();
                  };
              };
          };
          var setComponent = function (c) {
              return function (n) {
                  if (c instanceof None) {
                      return Data_Monoid.mempty(Effect.monoidEffect(Data_Monoid.monoidUnit));
                  };
                  if (c instanceof ImageComponent) {
                      return setImage(c.value0)("#" + (c.value1 + Data_Show.show(Data_Show.showInt)(n)));
                  };
                  if (c instanceof TextComponent) {
                      return setText(c.value0)(c.value1(n));
                  };
                  if (c instanceof LinearComponent) {
                      return setElements(c.value0)(n);
                  };
                  if (c instanceof SenaryComponent) {
                      return Control_Apply.applySecond(Effect.applyEffect)(setElements(c.value0)(Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(n)(6)))(setElements(c.value1)(Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(n)(6)));
                  };
                  if (c instanceof SunMoonComponent) {
                      return setSunMoonDial(c.value0)(n);
                  };
                  if (c instanceof ThemeComponent) {
                      return Data_Monoid.mempty(Effect.monoidEffect(Data_Monoid.monoidUnit));
                  };
                  throw new Error("Failed pattern match at Main (line 278, column 24 - line 286, column 45): " + [ c.constructor.name ]);
              };
          };
          var set = function (getFrom) {
              return setComponent(getFrom(display))(getFrom(date));
          };
          return Control_Apply.applySecond(Effect.applyEffect)(Control_Apply.applySecond(Effect.applyEffect)(Control_Apply.applySecond(Effect.applyEffect)(Control_Apply.applySecond(Effect.applyEffect)(Control_Apply.applySecond(Effect.applyEffect)(Control_Apply.applySecond(Effect.applyEffect)(Control_Apply.applySecond(Effect.applyEffect)(Control_Apply.applySecond(Effect.applyEffect)(Control_Apply.applySecond(Effect.applyEffect)(Control_Apply.applySecond(Effect.applyEffect)(Control_Apply.applySecond(Effect.applyEffect)(Control_Apply.applySecond(Effect.applyEffect)(Control_Apply.applySecond(Effect.applyEffect)(set(function (v) {
              return v.year;
          }))(set(function (v) {
              return v.season;
          })))(set(function (v) {
              return v.month;
          })))(set(function (v) {
              return v.week;
          })))(set(function (v) {
              return v.dayOfYear;
          })))(set(function (v) {
              return v.dayOfMonth;
          })))(set(function (v) {
              return v.mythRole;
          })))(set(function (v) {
              return v.mythNumber;
          })))(set(function (v) {
              return v.sunMoon;
          })))(set(function (v) {
              return v.hour;
          })))(set(function (v) {
              return v.minute;
          })))(set(function (v) {
              return v.second;
          })))(set(function (v) {
              return v.subsecond;
          })))(setTheme()(display.theme)(date.mythRole));
      };
  };
  var displayDate = function ($116) {
      return setDisplay(gregorianToHoney($116));
  };
  var displayNow = function (ds) {
      return function __do() {
          var n = Data_JSDate.now();
          return Data_Foldable.foldMap(Data_Foldable.foldableArray)(Effect.monoidEffect(Data_Monoid.monoidUnit))(displayDate(n))(ds)();
      };
  };
  var setup = Data_Functor["void"](Effect.functorEffect)(function __do() {
      var t = getTextualDisplay();
      var g = getGraphicalDisplay();
      return Effect_Timer.setInterval(Data_Int.floor(honeyDurations.subsecond))(displayNow([ t, g ]))();
  });
  exports["None"] = None;
  exports["ImageComponent"] = ImageComponent;
  exports["SunMoonComponent"] = SunMoonComponent;
  exports["TextComponent"] = TextComponent;
  exports["LinearComponent"] = LinearComponent;
  exports["SenaryComponent"] = SenaryComponent;
  exports["ThemeComponent"] = ThemeComponent;
  exports["creation"] = creation;
  exports["honeyDurations"] = honeyDurations;
  exports["mythCycle"] = mythCycle;
  exports["letterCycle"] = letterCycle;
  exports["seasons"] = seasons;
  exports["sunMoonRadius"] = sunMoonRadius;
  exports["padLeft"] = padLeft;
  exports["toSenary"] = toSenary;
  exports["elementsBySelector"] = elementsBySelector;
  exports["addClass"] = addClass;
  exports["removeClass"] = removeClass;
  exports["gregorianToHoney"] = gregorianToHoney;
  exports["getTextualDisplay"] = getTextualDisplay;
  exports["getGraphicalDisplay"] = getGraphicalDisplay;
  exports["setDisplay"] = setDisplay;
  exports["displayDate"] = displayDate;
  exports["displayNow"] = displayNow;
  exports["handleMouseMove"] = handleMouseMove;
  exports["attachPointLightHandler"] = attachPointLightHandler;
  exports["setup"] = setup;
  exports["main"] = main;
})(PS);
PS["Main"].main();